{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/alexander/github/XanderJL/last-draft/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/index.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  *[_type == \\\"post\\\"]{}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Container, Grid, Heading } from \"@chakra-ui/react\";\nimport { groq } from \"next-sanity\";\nimport Layout from \"@components/Layout\";\nimport Hero from \"@components/Hero\";\nimport BlogTabs from \"@components/BlogTabs\";\nimport { PortableText } from \"@lib/sanity\";\nimport Section from \"@components/Section\";\nimport PostCard from \"@components/Cards/PostCard\";\n\nvar Stories = function Stories(_ref) {\n  var _heroImage$metadata;\n\n  var blogData = _ref.blogData,\n      recentPostData = _ref.recentPostData,\n      categoryData = _ref.categoryData;\n  var heroImage = blogData.heroImage,\n      pubBody = blogData.pubBody;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: heroImage === null || heroImage === void 0 ? void 0 : (_heroImage$metadata = heroImage.metadata) === null || _heroImage$metadata === void 0 ? void 0 : _heroImage$metadata.lqip,\n      image: heroImage === null || heroImage === void 0 ? void 0 : heroImage.url,\n      minH: \"36em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.lg\",\n      children: [/*#__PURE__*/_jsxDEV(BlogTabs, {\n        categories: categoryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(PortableText, {\n          blocks: pubBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textTransform: \"uppercase\",\n          children: \"Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: {\n            base: \"minmax(0, 1fr)\",\n            md: \"repeat(auto-fill, minmax(360px, 1fr))\"\n          },\n          gap: 10,\n          children: recentPostData.map(function (post) {\n            var _mainImage$metadata;\n\n            var _id = post._id,\n                title = post.title,\n                mainImage = post.mainImage,\n                slug = post.slug,\n                category = post.category;\n            return /*#__PURE__*/_jsxDEV(PostCard, {\n              title: title,\n              placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata = mainImage.metadata) === null || _mainImage$metadata === void 0 ? void 0 : _mainImage$metadata.lqip,\n              image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n              link: \"/\".concat(category === null || category === void 0 ? void 0 : category.slug, \"/\").concat(slug),\n              children: \"brunkus\"\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Stories;\nvar featuredPostsQuery = groq(_templateObject());\nexport var __N_SSG = true;\nexport default Stories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/index.js"],"names":["Container","Grid","Heading","groq","Layout","Hero","BlogTabs","PortableText","Section","PostCard","Stories","blogData","recentPostData","categoryData","heroImage","pubBody","metadata","lqip","url","base","md","map","post","_id","title","mainImage","slug","category","featuredPostsQuery"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,QAAyC,kBAAzC;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgD;AAAA;;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,cAAmC,QAAnCA,cAAmC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAAA,MACtDC,SADsD,GAC/BH,QAD+B,CACtDG,SADsD;AAAA,MAC3CC,OAD2C,GAC/BJ,QAD+B,CAC3CI,OAD2C;AAG9D,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,WAAW,EAAED,SAAF,aAAEA,SAAF,8CAAEA,SAAS,CAAEE,QAAb,wDAAE,oBAAqBC,IADpC;AAEE,MAAA,KAAK,EAAEH,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEI,GAFpB;AAGE,MAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,cAAhB;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAEL;AAAtB;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,OAAD;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAFF,eAKE,QAAC,OAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,IAAD;AACE,UAAA,eAAe,EAAE;AACfI,YAAAA,IAAI,EAAE,gBADS;AAEfC,YAAAA,EAAE,EAAE;AAFW,WADnB;AAKE,UAAA,GAAG,EAAE,EALP;AAAA,oBAOGR,cAAc,CAACS,GAAf,CAAmB,UAACC,IAAD,EAAU;AAAA;;AAAA,gBACpBC,GADoB,GACsBD,IADtB,CACpBC,GADoB;AAAA,gBACfC,KADe,GACsBF,IADtB,CACfE,KADe;AAAA,gBACRC,SADQ,GACsBH,IADtB,CACRG,SADQ;AAAA,gBACGC,IADH,GACsBJ,IADtB,CACGI,IADH;AAAA,gBACSC,QADT,GACsBL,IADtB,CACSK,QADT;AAE5B,gCACE,QAAC,QAAD;AAEE,cAAA,KAAK,EAAEH,KAFT;AAGE,cAAA,WAAW,EAAEC,SAAF,aAAEA,SAAF,8CAAEA,SAAS,CAAET,QAAb,wDAAE,oBAAqBC,IAHpC;AAIE,cAAA,KAAK,EAAEQ,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEP,GAJpB;AAKE,cAAA,IAAI,aAAMS,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAED,IAAhB,cAAwBA,IAAxB,CALN;AAAA;AAAA,eACOH,GADP;AAAA;AAAA;AAAA;AAAA,qBADF;AAWD,WAbA;AAPH;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eALF;AAAA;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAqLD,CAxLD;;KAAMb,O;AAgQN,IAAMkB,kBAAkB,GAAGzB,IAAH,mBAAxB;;AAYA,eAAeO,OAAf","sourcesContent":["import { Container, Grid, Heading } from \"@chakra-ui/react\"\nimport { groq } from \"next-sanity\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport Layout from \"@components/Layout\"\nimport Hero from \"@components/Hero\"\nimport BlogTabs from \"@components/BlogTabs\"\nimport { PortableText } from \"@lib/sanity\"\nimport Section from \"@components/Section\"\nimport PostCard from \"@components/Cards/PostCard\"\n\nconst Stories = ({ blogData, recentPostData, categoryData }) => {\n  const { heroImage, pubBody } = blogData\n\n  return (\n    <Layout>\n      <Hero\n        placeholder={heroImage?.metadata?.lqip}\n        image={heroImage?.url}\n        minH=\"36em\"\n      />\n      <Container maxW=\"container.lg\">\n        <BlogTabs categories={categoryData} />\n        <Section>\n          <PortableText blocks={pubBody} />\n        </Section>\n        <Section>\n          <Heading textTransform=\"uppercase\">Recent</Heading>\n          <Grid\n            templateColumns={{\n              base: \"minmax(0, 1fr)\",\n              md: \"repeat(auto-fill, minmax(360px, 1fr))\",\n            }}\n            gap={10}\n          >\n            {recentPostData.map((post) => {\n              const { _id, title, mainImage, slug, category } = post\n              return (\n                <PostCard\n                  key={_id}\n                  title={title}\n                  placeholder={mainImage?.metadata?.lqip}\n                  image={mainImage?.url}\n                  link={`/${category?.slug}/${slug}`}\n                >\n                  brunkus\n                </PostCard>\n              )\n            })}\n          </Grid>\n        </Section>\n      </Container>\n      {/* <Hero />\n      <Container maxW=\"container.xl\">\n        <BlogTabs />\n        <Box\n          as=\"section\"\n          p={{ base: \"1.25rem\", md: \"2rem 1.25rem 3rem 1.25rem\" }}\n        >\n          <Box>\n            <PortableText blocks={pubBody} />\n          </Box>\n        </Box>\n        <section id=\"recent\" className=\"section-category\">\n          <h2\n            className=\"title is-size-3-desktop is-size-4-mobile is-montserrat is-uppercase has-text-black\"\n            style={{ marginBottom: \"0\" }}\n          >\n            Recent\n          </h2>\n          <hr style={{ margin: \"0.75rem 0\" }} />\n          <div className=\"wrapper-post\" style={{ padding: \"2rem 0\" }}>\n            {latestPosts.edges.map(({ node: post }) => {\n              const {\n                id,\n                title,\n                mainImage,\n                _rawBody,\n                previewCopy,\n                category,\n                slug,\n              } = post\n              const image = mainImage.asset\n              const link = category.parentCategory\n                ? `/stories/${category.parentCategory.slug.current}/${category.slug.current}/${slug.current}`\n                : `/stories/${category.slug.current}/${slug.current}`\n              return (\n                <PostCard key={id} title={title} image={image} link={link}>\n                  {previewCopy\n                    ? previewCopy\n                    : toPlainText(_rawBody).slice(0, 159) + \"...\"}\n                </PostCard>\n              )\n            })}\n          </div>\n        </section>\n        <section id=\"featured\" className=\"section\">\n          <h2\n            className=\"title is-size-3-desktop is-size-4-mobile is-montserrat is-uppercase has-text-black\"\n            style={{ marginBottom: \"0\" }}\n          >\n            Featured\n          </h2>\n          <hr style={{ margin: \"0.75rem 0\" }} />\n          <div className=\"wrapper-post\" style={{ padding: \"2rem 0\" }}>\n            {featuredPosts.featuredPosts.map((post) => {\n              const {\n                id,\n                title,\n                mainImage,\n                _rawBody,\n                previewCopy,\n                category,\n                slug,\n              } = post\n              const image = mainImage.asset\n              const link = category.parentCategory\n                ? `/stories/${category.parentCategory.slug.current}/${category.slug.current}/${slug.current}`\n                : `/stories/${category.slug.current}/${slug.current}`\n              return (\n                <PostCard\n                  key={id}\n                  title={title}\n                  image={image}\n                  link={link}\n                  cardStyle={{ maxWidth: \"420px\" }}\n                >\n                  {previewCopy\n                    ? previewCopy\n                    : toPlainText(_rawBody).slice(0, 159) + \"...\"}\n                </PostCard>\n              )\n            })}\n          </div>\n        </section>\n        {categories.map((category) => {\n          const { id, slug, title, description } = category\n          const link = `/stories/${slug.current}`\n\n          return (\n            <section key={id} id={slug.current} className=\"section-category\">\n              <Link to={\"/stories/\" + slug.current}>\n                <h2 className=\"title is-size-2-desktop is-size-4-mobile is-montserrat is-uppercase has-text-black\">\n                  {title}\n                </h2>\n                <hr />\n              </Link>\n              {description && <Text maxW=\"75ch\">{description}</Text>}\n              <div className=\"wrapper-post\" style={{ padding: \"2rem 0\" }}>\n                {posts.edges\n                  .filter(\n                    ({ node: post }) =>\n                      post.category.slug.current === slug.current\n                  )\n                  .slice(0, 3)\n                  .map(({ node: post }) => {\n                    const {\n                      id,\n                      title,\n                      mainImage,\n                      _rawBody,\n                      previewCopy,\n                      category,\n                      slug,\n                    } = post\n                    const image = mainImage.asset\n                    const link = `/stories/${category.slug.current}/${slug.current}`\n                    return (\n                      <PostCard\n                        key={id}\n                        title={title}\n                        image={image}\n                        link={link}\n                        cardStyle={{ maxWidth: \"420px\" }}\n                      >\n                        {previewCopy\n                          ? previewCopy\n                          : toPlainText(_rawBody).slice(0, 159) + \"...\"}\n                      </PostCard>\n                    )\n                  })}\n              </div>\n              <Link to={link} className=\"button is-size-5\">\n                More Articles &rsaquo;\n              </Link>\n            </section>\n          )\n        })}\n        <section className=\"section\">\n          <SubmitForm />\n        </section>\n      </Container>\n      <OptInModal /> */}\n    </Layout>\n  )\n}\n\nconst blogQuery = groq`\n*[_type == \"blog\"]{\n  title,\n  \"slug\": slug.current,\n  \"heroImage\": heroImage.asset->{\n    metadata,\n    url\n  },\n  \"pubBody\": publication.body,\n  featuredPosts[]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }\n}[0]\n`\n\nconst recentPostsQuery = groq`\n  *[_type == \"post\"] | order(publishedAt desc){\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }[0..2]\n`\n\nconst categoriesQuery = groq`\n  *[_type == \"category\" && !defined(parentCategory)]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    description,\n    \"posts\": *[_type == \"post\" && references(^._id)] | order(publishedAt desc) {\n      _id,\n      publishedAt,\n      \"slug\": slug.current,\n      title,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      previewCopy,\n      body,\n      category->{\n        \"slug\": slug.current\n      },\n      parentCategory->{\n        \"slug\": slug.current\n      }\n    }[0..2]\n  }\n`\n\nconst featuredPostsQuery = groq`\n  *[_type == \"post\"]{}\n`\n\nexport const getStaticProps = async () => {\n  const blogData = await getClient().fetch(blogQuery)\n  const recentPostData = await getClient().fetch(recentPostsQuery)\n  const categoryData = await getClient().fetch(categoriesQuery)\n\n  return { props: { blogData, recentPostData, categoryData } }\n}\n\nexport default Stories\n"]},"metadata":{},"sourceType":"module"}