{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/[category]/[post].js\";\nimport { Heading } from \"@chakra-ui/layout\";\nimport Layout from \"@components/Layout\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport { groq } from \"next-sanity\";\n\nconst Post = ({\n  postData\n}) => {\n  const {\n    title\n  } = postData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Heading, {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\nconst postQuery = groq`\n  *[_type == \"post\" && slug.current == $post]{\n    _id,\n    title\n  }[0]\n`;\nexport const getStaticPaths = async () => {\n  const posts = await getClient().fetch(groq`\n    *[_type == \"post\"]{ \"slug\": slug.current }\n  `);\n  const paths = posts.map(post => ({\n    params: {\n      post: post.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const postData = await getClient().fetch(postQuery, {\n    post: params.slug\n  });\n  return {\n    props: {\n      postData\n    }\n  };\n};\nexport default Post;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/[category]/[post].js"],"names":["Heading","Layout","getClient","groq","Post","postData","title","postQuery","getStaticPaths","posts","fetch","paths","map","post","params","slug","fallback","getStaticProps","props"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,IAAT,QAAqB,aAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAYD,QAAlB;AACA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,OAAD;AAAA,gBAAUC;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAPD;;AASA,MAAMC,SAAS,GAAGJ,IAAK;AACvB;AACA;AACA;AACA;AACA,CALA;AAOA,OAAO,MAAMK,cAAc,GAAG,YAAY;AACxC,QAAMC,KAAK,GAAG,MAAMP,SAAS,GAAGQ,KAAZ,CAAkBP,IAAK;AAC7C;AACA,GAFsB,CAApB;AAGA,QAAMQ,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAWC,IAAD,KAAW;AAAEC,IAAAA,MAAM,EAAE;AAAED,MAAAA,IAAI,EAAEA,IAAI,CAACE;AAAb;AAAV,GAAX,CAAV,CAAd;AAEA,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD,CAPM;AASP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEH,EAAAA;AAAF,CAAP,KAAsB;AAClD,QAAMT,QAAQ,GAAG,MAAMH,SAAS,GAAGQ,KAAZ,CAAkBH,SAAlB,EAA6B;AAAEM,IAAAA,IAAI,EAAEC,MAAM,CAACC;AAAf,GAA7B,CAAvB;AAEA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAEb,MAAAA;AAAF;AAAT,GAAP;AACD,CAJM;AAMP,eAAeD,IAAf","sourcesContent":["import { Heading } from \"@chakra-ui/layout\"\nimport Layout from \"@components/Layout\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport { groq } from \"next-sanity\"\n\nconst Post = ({ postData }) => {\n  const { title } = postData\n  return (\n    <Layout>\n      <Heading>{title}</Heading>\n    </Layout>\n  )\n}\n\nconst postQuery = groq`\n  *[_type == \"post\" && slug.current == $post]{\n    _id,\n    title\n  }[0]\n`\n\nexport const getStaticPaths = async () => {\n  const posts = await getClient().fetch(groq`\n    *[_type == \"post\"]{ \"slug\": slug.current }\n  `)\n  const paths = posts.map((post) => ({ params: { post: post.slug } }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const postData = await getClient().fetch(postQuery, { post: params.slug })\n\n  return { props: { postData } }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}