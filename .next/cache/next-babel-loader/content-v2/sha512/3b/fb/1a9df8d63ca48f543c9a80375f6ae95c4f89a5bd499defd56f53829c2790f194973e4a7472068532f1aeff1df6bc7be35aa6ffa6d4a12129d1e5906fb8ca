{"ast":null,"code":"import _defineProperty from \"/home/alexander/github/XanderJL/last-draft/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/lib/sanity/index.js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createImageUrlBuilder, createPortableTextComponent, createPreviewSubscriptionHook, createCurrentUserHook } from \"next-sanity\";\nimport { config } from \"./config\";\nimport { Heading, Image, Text } from \"@chakra-ui/react\";\nimport { SolidHr, ElipsesHr } from \"@components/Hr\";\nimport { Tweet } from \"react-twitter-widgets\";\nimport ReactPlayer from \"react-player\";\n/**\n * Set up a helper function for generating Image URLs with only the asset reference data in your documents.\n * Read more: https://www.sanity.io/docs/image-url\n **/\n\nexport var urlFor = function urlFor(source) {\n  return createImageUrlBuilder(config).image(source);\n}; // Set up the live preview subscription hook\n\nexport var usePreviewSubscription = createPreviewSubscriptionHook(config);\nexport var serializers = {\n  types: {\n    block: function block(props) {\n      var _props$node$style = props.node.style,\n          style = _props$node$style === void 0 ? \"normal\" : _props$node$style;\n\n      switch (style) {\n        case \"h1\":\n          return /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"2xl\",\n            textTransform: \"uppercase\",\n            pb: \"0.5rem\",\n            children: props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this);\n\n        case \"h2\":\n          return /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h2\",\n            size: \"xl\",\n            textTransform: \"uppercase\",\n            pb: \"0.5rem\",\n            children: props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, _this);\n\n        case \"h3\":\n          return /*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h3\",\n            size: \"lg\",\n            textTransform: \"uppercase\",\n            pb: \"0.5rem\",\n            children: props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this);\n\n        case \"blockquote\":\n          return /*#__PURE__*/_jsxDEV(Text, {\n            bg: \"gray.100\",\n            p: \"1.25rem\",\n            mb: \"1rem\",\n            borderLeft: \"4px solid\",\n            borderColor: \"gray.300\",\n            borderRadius: 2,\n            children: props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(Text, {\n            pb: \"1rem\",\n            children: props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, _this);\n      }\n    },\n    hr: function hr(_ref) {\n      var node = _ref.node;\n\n      switch (node.style) {\n        case \"elipses\":\n          return /*#__PURE__*/_jsxDEV(ElipsesHr, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 18\n          }, _this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(SolidHr, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 18\n          }, _this);\n      }\n    },\n    blockImage: function blockImage(_ref2) {\n      var node = _ref2.node;\n      var image = node.image,\n          alt = node.alt,\n          caption = node.caption;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: urlFor(image),\n          alt: alt,\n          style: {\n            margin: \"1rem auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"gray.400\",\n          fontStyle: \"italic\",\n          children: caption && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true);\n    },\n    embed: function embed(_ref3) {\n      var node = _ref3.node;\n      var url = node.url; // Instagram embeds\n\n      if (rx(\"instagram\").test(url)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: embedStyle,\n          children: /*#__PURE__*/_jsxDEV(InstagramEmbed, {\n            url: url,\n            hideCaption: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this);\n      } // Youtube embeds\n\n\n      if (rx(\"youtube\").test(url)) {\n        return /*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: url,\n          controls: true,\n          width: \"100%\",\n          style: embedStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this);\n      } // Twitter embeds\n\n\n      if (rx(\"twitter\").test(url)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: embedStyle,\n          children: /*#__PURE__*/_jsxDEV(Tweet, {\n            url: url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Missing url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, _this);\n    },\n    podBeanEmbed: function podBeanEmbed(_ref4) {\n      var node = _ref4.node;\n      var url = node.url,\n          title = node.title;\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }, _this);\n    }\n  }\n}; // Set up Portable Text serialization\n\nexport var PortableText = createPortableTextComponent(_objectSpread(_objectSpread({}, config), {}, {\n  // Serializers passed to @sanity/block-content-to-react\n  // (https://github.com/sanity-io/block-content-to-react)\n  serializers: serializers\n})); // Helper function for using the current logged in user account\n\nexport var useCurrentUser = createCurrentUserHook(config);","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/lib/sanity/index.js"],"names":["createImageUrlBuilder","createPortableTextComponent","createPreviewSubscriptionHook","createCurrentUserHook","config","Heading","Image","Text","SolidHr","ElipsesHr","Tweet","ReactPlayer","urlFor","source","image","usePreviewSubscription","serializers","types","block","props","node","style","children","hr","blockImage","alt","caption","margin","embed","url","rx","test","embedStyle","podBeanEmbed","title","PortableText","useCurrentUser"],"mappings":"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","sourcesContent":["import {\n  createImageUrlBuilder,\n  createPortableTextComponent,\n  createPreviewSubscriptionHook,\n  createCurrentUserHook,\n} from \"next-sanity\"\nimport { config } from \"./config\"\nimport { Heading, Image, Text } from \"@chakra-ui/react\"\nimport { SolidHr, ElipsesHr } from \"@components/Hr\"\nimport { Tweet } from \"react-twitter-widgets\"\nimport ReactPlayer from \"react-player\"\n\n/**\n * Set up a helper function for generating Image URLs with only the asset reference data in your documents.\n * Read more: https://www.sanity.io/docs/image-url\n **/\nexport const urlFor = (source) => createImageUrlBuilder(config).image(source)\n\n// Set up the live preview subscription hook\nexport const usePreviewSubscription = createPreviewSubscriptionHook(config)\n\nexport const serializers = {\n  types: {\n    block: (props) => {\n      const { style = \"normal\" } = props.node\n\n      switch (style) {\n        case \"h1\":\n          return (\n            <Heading size=\"2xl\" textTransform=\"uppercase\" pb=\"0.5rem\">\n              {props.children}\n            </Heading>\n          )\n        case \"h2\":\n          return (\n            <Heading as=\"h2\" size=\"xl\" textTransform=\"uppercase\" pb=\"0.5rem\">\n              {props.children}\n            </Heading>\n          )\n        case \"h3\":\n          return (\n            <Heading as=\"h3\" size=\"lg\" textTransform=\"uppercase\" pb=\"0.5rem\">\n              {props.children}\n            </Heading>\n          )\n        case \"blockquote\":\n          return (\n            <Text\n              bg=\"gray.100\"\n              p=\"1.25rem\"\n              mb=\"1rem\"\n              borderLeft=\"4px solid\"\n              borderColor=\"gray.300\"\n              borderRadius={2}\n            >\n              {props.children}\n            </Text>\n          )\n        default:\n          return <Text pb=\"1rem\">{props.children}</Text>\n      }\n    },\n    hr: ({ node }) => {\n      switch (node.style) {\n        case \"elipses\":\n          return <ElipsesHr />\n        default:\n          return <SolidHr />\n      }\n    },\n    blockImage: ({ node }) => {\n      const { image, alt, caption } = node\n      return (\n        <>\n          <Image\n            src={urlFor(image)}\n            alt={alt}\n            style={{ margin: \"1rem auto\" }}\n          />\n          <Text color=\"gray.400\" fontStyle=\"italic\">\n            {caption && <span>{caption}</span>}\n          </Text>\n        </>\n      )\n    },\n    embed: ({ node }) => {\n      const { url } = node\n\n      // Instagram embeds\n      if (rx(\"instagram\").test(url)) {\n        return (\n          <div style={embedStyle}>\n            <InstagramEmbed url={url} hideCaption={true} />\n          </div>\n        )\n      }\n\n      // Youtube embeds\n      if (rx(\"youtube\").test(url)) {\n        return (\n          <ReactPlayer\n            url={url}\n            controls={true}\n            width={\"100%\"}\n            style={embedStyle}\n          />\n        )\n      }\n\n      // Twitter embeds\n      if (rx(\"twitter\").test(url)) {\n        return (\n          <div style={embedStyle}>\n            <Tweet url={url} />\n          </div>\n        )\n      }\n\n      return <span>Missing url</span>\n    },\n    podBeanEmbed: ({ node }) => {\n      const { url, title } = node\n      return <div />\n    },\n  },\n}\n\n// Set up Portable Text serialization\nexport const PortableText = createPortableTextComponent({\n  ...config,\n  // Serializers passed to @sanity/block-content-to-react\n  // (https://github.com/sanity-io/block-content-to-react)\n  serializers,\n})\n\n// Helper function for using the current logged in user account\nexport const useCurrentUser = createCurrentUserHook(config)\n"]},"metadata":{},"sourceType":"module"}