{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/index.js\",\n    _this = this;\n\nimport { Container, Heading, Text } from \"@chakra-ui/react\";\nimport Layout from \"@components/Layout\";\nimport Hero from \"@components/Hero\";\nimport BlogTabs from \"@components/BlogTabs\";\nimport { PortableText } from \"@lib/sanity\";\nimport Section from \"@components/Layout/Section\";\nimport PostCard from \"@components/Cards/PostCard\";\nimport CardGrid from \"@components/Layout/Grids/CardGrid\";\nimport SubmitForm from \"@components/Forms/SubmitForm\";\nimport OptInModal from \"@components/Modals/OptInModal\";\n\nvar Stories = function Stories(_ref) {\n  var _heroImage$metadata;\n\n  var blogData = _ref.blogData,\n      recentPostData = _ref.recentPostData,\n      categoryData = _ref.categoryData;\n  var heroImage = blogData.heroImage,\n      pubBody = blogData.pubBody;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: heroImage === null || heroImage === void 0 ? void 0 : (_heroImage$metadata = heroImage.metadata) === null || _heroImage$metadata === void 0 ? void 0 : _heroImage$metadata.lqip,\n      image: heroImage === null || heroImage === void 0 ? void 0 : heroImage.url,\n      minH: \"36em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.lg\",\n      children: [/*#__PURE__*/_jsxDEV(BlogTabs, {\n        categories: categoryData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(PortableText, {\n          blocks: pubBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textTransform: \"uppercase\",\n          pb: \"1.5rem\",\n          children: \"Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(CardGrid, {\n          children: recentPostData.map(function (post) {\n            var _mainImage$metadata;\n\n            var _id = post._id,\n                title = post.title,\n                mainImage = post.mainImage,\n                slug = post.slug,\n                category = post.category;\n            return /*#__PURE__*/_jsxDEV(PostCard, {\n              title: title,\n              placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata = mainImage.metadata) === null || _mainImage$metadata === void 0 ? void 0 : _mainImage$metadata.lqip,\n              image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n              link: \"/\".concat(category === null || category === void 0 ? void 0 : category.slug, \"/\").concat(slug),\n              children: \"brunkus\"\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this), categoryData.map(function (category) {\n        var _id = category._id,\n            title = category.title,\n            slug = category.slug,\n            description = category.description,\n            posts = category.posts;\n        return /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            textTransform: \"uppercase\",\n            pb: \"0.5rem\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, _this), description && /*#__PURE__*/_jsxDEV(Text, {\n            pb: \"1.5rem\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 31\n          }, _this), /*#__PURE__*/_jsxDEV(CardGrid, {\n            children: posts.map(function (post) {\n              var _mainImage$metadata2;\n\n              var _id = post._id,\n                  title = post.title,\n                  mainImage = post.mainImage,\n                  slug = post.slug,\n                  category = post.category;\n              return /*#__PURE__*/_jsxDEV(PostCard, {\n                title: title,\n                placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata2 = mainImage.metadata) === null || _mainImage$metadata2 === void 0 ? void 0 : _mainImage$metadata2.lqip,\n                image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n                link: \"/\".concat(category === null || category === void 0 ? void 0 : category.slug, \"/\").concat(slug),\n                children: \"tunkis\"\n              }, _id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, _this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(SubmitForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(OptInModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Stories;\nexport var __N_SSG = true;\nexport default Stories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/index.js"],"names":["Container","Heading","Text","Layout","Hero","BlogTabs","PortableText","Section","PostCard","CardGrid","SubmitForm","OptInModal","Stories","blogData","recentPostData","categoryData","heroImage","pubBody","metadata","lqip","url","map","post","_id","title","mainImage","slug","category","description","posts"],"mappings":"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","sourcesContent":["import { Container, Heading, Text } from \"@chakra-ui/react\"\nimport { groq } from \"next-sanity\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport Layout from \"@components/Layout\"\nimport Hero from \"@components/Hero\"\nimport BlogTabs from \"@components/BlogTabs\"\nimport { PortableText } from \"@lib/sanity\"\nimport Section from \"@components/Layout/Section\"\nimport PostCard from \"@components/Cards/PostCard\"\nimport CardGrid from \"@components/Layout/Grids/CardGrid\"\nimport SubmitForm from \"@components/Forms/SubmitForm\"\nimport OptInModal from \"@components/Modals/OptInModal\"\n\nconst Stories = ({ blogData, recentPostData, categoryData }) => {\n  const { heroImage, pubBody } = blogData\n\n  return (\n    <Layout>\n      <Hero\n        placeholder={heroImage?.metadata?.lqip}\n        image={heroImage?.url}\n        minH=\"36em\"\n      />\n      <Container maxW=\"container.lg\">\n        <BlogTabs categories={categoryData} />\n        <Section>\n          <PortableText blocks={pubBody} />\n        </Section>\n        <Section>\n          <Heading textTransform=\"uppercase\" pb=\"1.5rem\">\n            Recent\n          </Heading>\n          <CardGrid>\n            {recentPostData.map((post) => {\n              const { _id, title, mainImage, slug, category } = post\n              return (\n                <PostCard\n                  key={_id}\n                  title={title}\n                  placeholder={mainImage?.metadata?.lqip}\n                  image={mainImage?.url}\n                  link={`/${category?.slug}/${slug}`}\n                >\n                  brunkus\n                </PostCard>\n              )\n            })}\n          </CardGrid>\n        </Section>\n        {categoryData.map((category) => {\n          const { _id, title, slug, description, posts } = category\n          return (\n            <Section key={_id}>\n              <Heading textTransform=\"uppercase\" pb=\"0.5rem\">\n                {title}\n              </Heading>\n              {description && <Text pb=\"1.5rem\">{description}</Text>}\n              <CardGrid>\n                {posts.map((post) => {\n                  const { _id, title, mainImage, slug, category } = post\n                  return (\n                    <PostCard\n                      key={_id}\n                      title={title}\n                      placeholder={mainImage?.metadata?.lqip}\n                      image={mainImage?.url}\n                      link={`/${category?.slug}/${slug}`}\n                    >\n                      tunkis\n                    </PostCard>\n                  )\n                })}\n              </CardGrid>\n            </Section>\n          )\n        })}\n        <Section>\n          <SubmitForm />\n        </Section>\n      </Container>\n      <OptInModal />\n    </Layout>\n  )\n}\n\nconst blogQuery = groq`\n*[_type == \"blog\"]{\n  title,\n  \"slug\": slug.current,\n  \"heroImage\": heroImage.asset->{\n    metadata,\n    url\n  },\n  \"pubBody\": publication.body,\n  featuredPosts[]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }\n}[0]\n`\n\nconst recentPostsQuery = groq`\n  *[_type == \"post\"] | order(publishedAt desc){\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }[0..2]\n`\n\nconst categoriesQuery = groq`\n  *[_type == \"category\" && !defined(parentCategory)]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    description,\n    \"posts\": *[_type == \"post\" && references(^._id)] | order(publishedAt desc) {\n      _id,\n      publishedAt,\n      \"slug\": slug.current,\n      title,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      previewCopy,\n      body,\n      category->{\n        \"slug\": slug.current\n      },\n      parentCategory->{\n        \"slug\": slug.current\n      }\n    }[0..2]\n  }\n`\n\nexport const getStaticProps = async () => {\n  const blogData = await getClient().fetch(blogQuery)\n  const recentPostData = await getClient().fetch(recentPostsQuery)\n  const categoryData = await getClient().fetch(categoriesQuery)\n\n  return { props: { blogData, recentPostData, categoryData } }\n}\n\nexport default Stories\n"]},"metadata":{},"sourceType":"module"}