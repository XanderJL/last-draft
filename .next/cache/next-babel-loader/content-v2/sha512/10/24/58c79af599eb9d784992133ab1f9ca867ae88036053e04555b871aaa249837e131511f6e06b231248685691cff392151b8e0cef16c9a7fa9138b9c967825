{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/authors/[slug].js\";\nimport { Box, Container, Flex, Heading, Image, Stack } from \"@chakra-ui/react\";\nimport AuthorBio from \"@components/AuthorBio\";\nimport Layout from \"@components/Layout\";\nimport Section from \"@components/Layout/Section\";\nimport Link from \"@components/Link\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport { groq } from \"next-sanity\";\nimport toPlainText from \"util/toPlainText\";\n\nconst Author = ({\n  authorData\n}) => {\n  const {\n    _id,\n    name,\n    bio,\n    slug,\n    image,\n    posts\n  } = authorData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.md\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(AuthorBio, {\n          name: name,\n          image: image,\n          slug: slug,\n          bio: bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          size: \"xl\",\n          textTransform: \"uppercase\",\n          children: \"Latest Stories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), posts.map(post => {\n          var _image$metadata;\n\n          const {\n            _id,\n            publishedAt,\n            mainImage,\n            title,\n            body,\n            category,\n            slug: postSlug\n          } = post;\n          const authorLink = `/stories/authors/${slug}`;\n          const categoryLink = `/stories/${category.slug}`;\n          const postLink = categoryLink + `/${postSlug}`;\n          return /*#__PURE__*/_jsxDEV(Box, {\n            boxShadow: \"lg\",\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: authorLink,\n                children: image && /*#__PURE__*/_jsxDEV(Image, {\n                  boxSize: 50,\n                  src: image === null || image === void 0 ? void 0 : image.url,\n                  objectFit: \"cover\",\n                  objectPosition: \"center\",\n                  bgImage: image === null || image === void 0 ? void 0 : (_image$metadata = image.metadata) === null || _image$metadata === void 0 ? void 0 : _image$metadata.lqip,\n                  bgSize: \"cover\",\n                  bgPosition: \"center\",\n                  bgRepeat: \"no-repeat\",\n                  borderRadius: \"full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header-title\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  as: \"h3\",\n                  size: \"md\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: authorLink,\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 23\n                  }, this), \" in\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: categoryLink,\n                    children: [category.title, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"is-montserrat has-text-grey\",\n                  children: publishedAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: postLink,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n                  options: {\n                    maxWidth: 1600,\n                    maxHeight: 900\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"title is-montserrat is-uppercase is-size-4-mobile\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: toPlainText(body).slice(0, 119) + \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: postLink,\n                className: \"button is-montserrat\",\n                children: \"Read \\u203A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, _id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nconst singleAuthorQuery = groq`\n  *[_type == \"author\" && slug.current == $slug]{\n    _id,\n    name,\n    bio,\n    \"slug\": slug.current,\n    \"image\": image.asset->{\n      metadata,\n      url\n    },\n    \"posts\": *[_type == \"post\" && references(^._id)]{\n      _id,\n      publishedAt,\n      title,\n      body,\n      \"slug\": slug.current,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      category->{\n        title,\n        \"slug\": slug.current\n      }\n    }\n  }[0]\n`;\nexport const getStaticPaths = async () => {\n  const authors = await getClient().fetch(groq`*[_type == \"author\"]{ \"slug\": slug.current }`);\n  const paths = authors.map(author => ({\n    params: {\n      slug: author.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const authorData = await getClient().fetch(singleAuthorQuery, {\n    slug: params.slug\n  });\n  return {\n    props: {\n      authorData\n    }\n  };\n};\nexport default Author;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/authors/[slug].js"],"names":["Box","Container","Flex","Heading","Image","Stack","AuthorBio","Layout","Section","Link","getClient","groq","toPlainText","Author","authorData","_id","name","bio","slug","image","posts","map","post","publishedAt","mainImage","title","body","category","postSlug","authorLink","categoryLink","postLink","url","metadata","lqip","maxWidth","maxHeight","slice","singleAuthorQuery","getStaticPaths","authors","fetch","paths","author","params","fallback","getStaticProps","props"],"mappings":"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","sourcesContent":["import { Box, Container, Flex, Heading, Image, Stack } from \"@chakra-ui/react\"\nimport AuthorBio from \"@components/AuthorBio\"\nimport Layout from \"@components/Layout\"\nimport Section from \"@components/Layout/Section\"\nimport Link from \"@components/Link\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport { groq } from \"next-sanity\"\nimport toPlainText from \"util/toPlainText\"\n\nconst Author = ({ authorData }) => {\n  const { _id, name, bio, slug, image, posts } = authorData\n  return (\n    <Layout>\n      <Container maxW=\"container.md\">\n        <Section>\n          <AuthorBio name={name} image={image} slug={slug} bio={bio} />\n        </Section>\n        <Section>\n          <Heading as=\"h2\" size=\"xl\" textTransform=\"uppercase\">\n            Latest Stories\n          </Heading>\n          {posts.map((post) => {\n            const {\n              _id,\n              publishedAt,\n              mainImage,\n              title,\n              body,\n              category,\n              slug: postSlug,\n            } = post\n            const authorLink = `/stories/authors/${slug}`\n            const categoryLink = `/stories/${category.slug}`\n            const postLink = categoryLink + `/${postSlug}`\n\n            return (\n              <Box key={_id} boxShadow=\"lg\">\n                <Stack direction=\"row\">\n                  <Link href={authorLink}>\n                    {image && (\n                      <Image\n                        boxSize={50}\n                        src={image?.url}\n                        objectFit=\"cover\"\n                        objectPosition=\"center\"\n                        bgImage={image?.metadata?.lqip}\n                        bgSize=\"cover\"\n                        bgPosition=\"center\"\n                        bgRepeat=\"no-repeat\"\n                        borderRadius=\"full\"\n                      />\n                    )}\n                  </Link>\n                  <div className=\"card-header-title\">\n                    <Heading as=\"h3\" size=\"md\">\n                      <Link to={authorLink}>{name}</Link> in{\" \"}\n                      <Link to={categoryLink}>{category.title} </Link>{\" \"}\n                    </Heading>\n                    <h3 className=\"is-montserrat has-text-grey\">\n                      {publishedAt}\n                    </h3>\n                  </div>\n                </Stack>\n                <div className=\"card-image\">\n                  <Link to={postLink}>\n                    <Image\n                      src={mainImage?.url}\n                      options={{ maxWidth: 1600, maxHeight: 900 }}\n                    />\n                  </Link>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"content\">\n                    <h2 className=\"title is-montserrat is-uppercase is-size-4-mobile\">\n                      {title}\n                    </h2>\n                    <p>{toPlainText(body).slice(0, 119) + \"...\"}</p>\n                  </div>\n                  <Link to={postLink} className=\"button is-montserrat\">\n                    Read &rsaquo;\n                  </Link>\n                </div>\n              </Box>\n            )\n          })}\n        </Section>\n      </Container>\n    </Layout>\n  )\n}\n\nconst singleAuthorQuery = groq`\n  *[_type == \"author\" && slug.current == $slug]{\n    _id,\n    name,\n    bio,\n    \"slug\": slug.current,\n    \"image\": image.asset->{\n      metadata,\n      url\n    },\n    \"posts\": *[_type == \"post\" && references(^._id)]{\n      _id,\n      publishedAt,\n      title,\n      body,\n      \"slug\": slug.current,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      category->{\n        title,\n        \"slug\": slug.current\n      }\n    }\n  }[0]\n`\n\nexport const getStaticPaths = async () => {\n  const authors = await getClient().fetch(\n    groq`*[_type == \"author\"]{ \"slug\": slug.current }`\n  )\n  const paths = authors.map((author) => ({ params: { slug: author.slug } }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const authorData = await getClient().fetch(singleAuthorQuery, {\n    slug: params.slug,\n  })\n\n  return { props: { authorData } }\n}\n\nexport default Author\n"]},"metadata":{},"sourceType":"module"}