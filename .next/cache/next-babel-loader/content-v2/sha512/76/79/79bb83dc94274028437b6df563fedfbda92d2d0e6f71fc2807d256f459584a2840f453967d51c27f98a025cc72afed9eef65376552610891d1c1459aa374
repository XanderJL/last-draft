{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/[category].js\";\nimport { useRouter } from \"next/router\";\nimport { Container, Heading } from \"@chakra-ui/layout\";\nimport BlogTabs from \"@components/BlogTabs\";\nimport PostCard from \"@components/Cards/PostCard\";\nimport SubmitForm from \"@components/Forms/SubmitForm\";\nimport Hero from \"@components/Hero\";\nimport Layout from \"@components/Layout\";\nimport CardGrid from \"@components/Layout/Grids/CardGrid\";\nimport Section from \"@components/Layout/Section\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport { groq } from \"next-sanity\";\nimport toPlainText from \"util/toPlainText\";\n\nconst Category = ({\n  blogData,\n  postsData\n}) => {\n  var _heroImage$metadata;\n\n  const {\n    heroImage,\n    categories\n  } = blogData;\n  const router = useRouter();\n  console.log({\n    router\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: heroImage === null || heroImage === void 0 ? void 0 : (_heroImage$metadata = heroImage.metadata) === null || _heroImage$metadata === void 0 ? void 0 : _heroImage$metadata.lqip,\n      image: heroImage === null || heroImage === void 0 ? void 0 : heroImage.url,\n      minH: \"36em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: [/*#__PURE__*/_jsxDEV(BlogTabs, {\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textTransform: \"uppercase\",\n          pb: \"1.5rem\",\n          children: router.query.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n          children: postsData.map(post => {\n            var _mainImage$metadata;\n\n            const {\n              _id,\n              title,\n              mainImage,\n              slug,\n              category,\n              previewCopy,\n              body\n            } = post;\n            return /*#__PURE__*/_jsxDEV(PostCard, {\n              title: title,\n              placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata = mainImage.metadata) === null || _mainImage$metadata === void 0 ? void 0 : _mainImage$metadata.lqip,\n              image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n              link: `/${category === null || category === void 0 ? void 0 : category.slug}/${slug}`,\n              children: previewCopy ? previewCopy : toPlainText(body).slice(0, 124) + \"...\"\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(SubmitForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nconst blogQuery = groq`\n*[_type == \"blog\"]{\n  \"heroImage\": heroImage.asset->{\n    metadata,\n    url\n  },\n  categories[!defined(parentCategory)]->{\n    _id,\n    title,\n    \"slug\": slug.current\n  }\n}[0]\n`;\nconst postsQuery = groq`\n  *[_type == \"post\" && category->slug.current == \"creative-writing\"]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }\n`;\nexport const getStaticPaths = async () => {\n  const blog = await getClient().fetch(blogQuery);\n  const paths = blog.categories.map(category => ({\n    params: {\n      category: category.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const blogData = await getClient().fetch(blogQuery);\n  const postsData = await getClient().fetch(postsQuery, {\n    category: params.category\n  });\n  return {\n    props: {\n      blogData,\n      postsData\n    }\n  };\n};\nexport default Category;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/[category].js"],"names":["useRouter","Container","Heading","BlogTabs","PostCard","SubmitForm","Hero","Layout","CardGrid","Section","getClient","groq","toPlainText","Category","blogData","postsData","heroImage","categories","router","console","log","metadata","lqip","url","query","title","map","post","_id","mainImage","slug","category","previewCopy","body","slice","blogQuery","postsQuery","getStaticPaths","blog","fetch","paths","params","fallback","getStaticProps","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\"\nimport { Container, Heading } from \"@chakra-ui/layout\"\nimport BlogTabs from \"@components/BlogTabs\"\nimport PostCard from \"@components/Cards/PostCard\"\nimport SubmitForm from \"@components/Forms/SubmitForm\"\nimport Hero from \"@components/Hero\"\nimport Layout from \"@components/Layout\"\nimport CardGrid from \"@components/Layout/Grids/CardGrid\"\nimport Section from \"@components/Layout/Section\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport { groq } from \"next-sanity\"\nimport toPlainText from \"util/toPlainText\"\n\nconst Category = ({ blogData, postsData }) => {\n  const { heroImage, categories } = blogData\n  const router = useRouter()\n  console.log({ router })\n  return (\n    <Layout>\n      <Hero\n        placeholder={heroImage?.metadata?.lqip}\n        image={heroImage?.url}\n        minH=\"36em\"\n      />\n      <Container maxW=\"container.xl\">\n        <BlogTabs categories={categories} />\n        <Section>\n          <Heading textTransform=\"uppercase\" pb=\"1.5rem\">\n            {router.query.title}\n          </Heading>\n          <CardGrid>\n            {postsData.map((post) => {\n              const {\n                _id,\n                title,\n                mainImage,\n                slug,\n                category,\n                previewCopy,\n                body,\n              } = post\n              return (\n                <PostCard\n                  key={_id}\n                  title={title}\n                  placeholder={mainImage?.metadata?.lqip}\n                  image={mainImage?.url}\n                  link={`/${category?.slug}/${slug}`}\n                >\n                  {previewCopy\n                    ? previewCopy\n                    : toPlainText(body).slice(0, 124) + \"...\"}\n                </PostCard>\n              )\n            })}\n          </CardGrid>\n        </Section>\n        <Section>\n          <SubmitForm />\n        </Section>\n      </Container>\n    </Layout>\n  )\n}\n\nconst blogQuery = groq`\n*[_type == \"blog\"]{\n  \"heroImage\": heroImage.asset->{\n    metadata,\n    url\n  },\n  categories[!defined(parentCategory)]->{\n    _id,\n    title,\n    \"slug\": slug.current\n  }\n}[0]\n`\n\nconst postsQuery = groq`\n  *[_type == \"post\" && category->slug.current == \"creative-writing\"]{\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }\n`\n\nexport const getStaticPaths = async () => {\n  const blog = await getClient().fetch(blogQuery)\n  const paths = blog.categories.map((category) => ({\n    params: { category: category.slug },\n  }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const blogData = await getClient().fetch(blogQuery)\n  const postsData = await getClient().fetch(postsQuery, {\n    category: params.category,\n  })\n\n  return { props: { blogData, postsData } }\n}\n\nexport default Category\n"]},"metadata":{},"sourceType":"module"}