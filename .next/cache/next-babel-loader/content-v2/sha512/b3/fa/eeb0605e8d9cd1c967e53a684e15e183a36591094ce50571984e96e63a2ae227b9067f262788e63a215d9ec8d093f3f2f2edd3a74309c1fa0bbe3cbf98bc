{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/authors/[slug].js\";\nimport { Box, Container, Flex, Grid, Heading, Image, Stack } from \"@chakra-ui/react\";\nimport AuthorBio from \"@components/AuthorBio\";\nimport Layout from \"@components/Layout\";\nimport Section from \"@components/Layout/Section\";\nimport Link from \"@components/Link\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport { groq } from \"next-sanity\";\nimport toPlainText from \"util/toPlainText\";\n\nconst Author = ({\n  authorData\n}) => {\n  const {\n    _id,\n    name,\n    bio,\n    slug,\n    image,\n    posts\n  } = authorData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.md\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(AuthorBio, {\n          name: name,\n          image: image,\n          slug: slug,\n          bio: bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h2\",\n          size: \"xl\",\n          textTransform: \"uppercase\",\n          pb: \"2rem\",\n          children: \"Latest Stories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 8,\n          children: posts.map(post => {\n            var _image$metadata;\n\n            const {\n              _id,\n              publishedAt,\n              mainImage,\n              title,\n              body,\n              category,\n              slug: postSlug\n            } = post;\n            const authorLink = `/stories/authors/${slug}`;\n            const categoryLink = `/stories/${category.slug}`;\n            const postLink = categoryLink + `/${postSlug}`;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              boxShadow: \"lg\",\n              border: \"1px solid\",\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                p: \"1rem\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  href: authorLink,\n                  children: image && /*#__PURE__*/_jsxDEV(Image, {\n                    boxSize: 50,\n                    src: image === null || image === void 0 ? void 0 : image.url,\n                    objectFit: \"cover\",\n                    objectPosition: \"center\",\n                    bgImage: image === null || image === void 0 ? void 0 : (_image$metadata = image.metadata) === null || _image$metadata === void 0 ? void 0 : _image$metadata.lqip,\n                    bgSize: \"cover\",\n                    bgPosition: \"center\",\n                    bgRepeat: \"no-repeat\",\n                    borderRadius: \"full\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header-title\",\n                  children: [/*#__PURE__*/_jsxDEV(Heading, {\n                    as: \"h3\",\n                    size: \"md\",\n                    textTransform: \"uppercase\",\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      href: authorLink,\n                      children: name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 25\n                    }, this), \" in\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                      href: categoryLink,\n                      children: [category.title, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"is-montserrat has-text-grey\",\n                    children: new Date(publishedAt).toLocaleString(\"en-US\", {\n                      month: \"long\",\n                      day: \"numeric\",\n                      year: \"numeric\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: postLink,\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n                    options: {\n                      maxWidth: 1600,\n                      maxHeight: 900\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"title is-montserrat is-uppercase is-size-4-mobile\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: toPlainText(body).slice(0, 119) + \"...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  href: postLink,\n                  className: \"button is-montserrat\",\n                  children: \"Read \\u203A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, _id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nconst singleAuthorQuery = groq`\n  *[_type == \"author\" && slug.current == $slug]{\n    _id,\n    name,\n    bio,\n    \"slug\": slug.current,\n    \"image\": image.asset->{\n      metadata,\n      url\n    },\n    \"posts\": *[_type == \"post\" && references(^._id)]{\n      _id,\n      publishedAt,\n      title,\n      body,\n      \"slug\": slug.current,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      category->{\n        title,\n        \"slug\": slug.current\n      }\n    }\n  }[0]\n`;\nexport const getStaticPaths = async () => {\n  const authors = await getClient().fetch(groq`*[_type == \"author\"]{ \"slug\": slug.current }`);\n  const paths = authors.map(author => ({\n    params: {\n      slug: author.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const authorData = await getClient().fetch(singleAuthorQuery, {\n    slug: params.slug\n  });\n  return {\n    props: {\n      authorData\n    }\n  };\n};\nexport default Author;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/authors/[slug].js"],"names":["Box","Container","Flex","Grid","Heading","Image","Stack","AuthorBio","Layout","Section","Link","getClient","groq","toPlainText","Author","authorData","_id","name","bio","slug","image","posts","map","post","publishedAt","mainImage","title","body","category","postSlug","authorLink","categoryLink","postLink","url","metadata","lqip","Date","toLocaleString","month","day","year","maxWidth","maxHeight","slice","singleAuthorQuery","getStaticPaths","authors","fetch","paths","author","params","fallback","getStaticProps","props"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Container,\n  Flex,\n  Grid,\n  Heading,\n  Image,\n  Stack,\n} from \"@chakra-ui/react\"\nimport AuthorBio from \"@components/AuthorBio\"\nimport Layout from \"@components/Layout\"\nimport Section from \"@components/Layout/Section\"\nimport Link from \"@components/Link\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport { groq } from \"next-sanity\"\nimport toPlainText from \"util/toPlainText\"\n\nconst Author = ({ authorData }) => {\n  const { _id, name, bio, slug, image, posts } = authorData\n  return (\n    <Layout>\n      <Container maxW=\"container.md\">\n        <Section>\n          <AuthorBio name={name} image={image} slug={slug} bio={bio} />\n        </Section>\n        <Section>\n          <Heading as=\"h2\" size=\"xl\" textTransform=\"uppercase\" pb=\"2rem\">\n            Latest Stories\n          </Heading>\n          <Stack spacing={8}>\n            {posts.map((post) => {\n              const {\n                _id,\n                publishedAt,\n                mainImage,\n                title,\n                body,\n                category,\n                slug: postSlug,\n              } = post\n              const authorLink = `/stories/authors/${slug}`\n              const categoryLink = `/stories/${category.slug}`\n              const postLink = categoryLink + `/${postSlug}`\n              return (\n                <Box key={_id} boxShadow=\"lg\" border=\"1px solid\">\n                  <Stack direction=\"row\" p=\"1rem\">\n                    <Link href={authorLink}>\n                      {image && (\n                        <Image\n                          boxSize={50}\n                          src={image?.url}\n                          objectFit=\"cover\"\n                          objectPosition=\"center\"\n                          bgImage={image?.metadata?.lqip}\n                          bgSize=\"cover\"\n                          bgPosition=\"center\"\n                          bgRepeat=\"no-repeat\"\n                          borderRadius=\"full\"\n                        />\n                      )}\n                    </Link>\n                    <div className=\"card-header-title\">\n                      <Heading as=\"h3\" size=\"md\" textTransform=\"uppercase\">\n                        <Link href={authorLink}>{name}</Link> in{\" \"}\n                        <Link href={categoryLink}>{category.title} </Link>{\" \"}\n                      </Heading>\n                      <h3 className=\"is-montserrat has-text-grey\">\n                        {new Date(publishedAt).toLocaleString(\"en-US\", {\n                          month: \"long\",\n                          day: \"numeric\",\n                          year: \"numeric\",\n                        })}\n                      </h3>\n                    </div>\n                  </Stack>\n                  <div className=\"card-image\">\n                    <Link href={postLink}>\n                      <Image\n                        src={mainImage?.url}\n                        options={{ maxWidth: 1600, maxHeight: 900 }}\n                      />\n                    </Link>\n                  </div>\n                  <div className=\"card-content\">\n                    <div className=\"content\">\n                      <h2 className=\"title is-montserrat is-uppercase is-size-4-mobile\">\n                        {title}\n                      </h2>\n                      <p>{toPlainText(body).slice(0, 119) + \"...\"}</p>\n                    </div>\n                    <Link href={postLink} className=\"button is-montserrat\">\n                      Read &rsaquo;\n                    </Link>\n                  </div>\n                </Box>\n              )\n            })}\n          </Stack>\n        </Section>\n      </Container>\n    </Layout>\n  )\n}\n\nconst singleAuthorQuery = groq`\n  *[_type == \"author\" && slug.current == $slug]{\n    _id,\n    name,\n    bio,\n    \"slug\": slug.current,\n    \"image\": image.asset->{\n      metadata,\n      url\n    },\n    \"posts\": *[_type == \"post\" && references(^._id)]{\n      _id,\n      publishedAt,\n      title,\n      body,\n      \"slug\": slug.current,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      category->{\n        title,\n        \"slug\": slug.current\n      }\n    }\n  }[0]\n`\n\nexport const getStaticPaths = async () => {\n  const authors = await getClient().fetch(\n    groq`*[_type == \"author\"]{ \"slug\": slug.current }`\n  )\n  const paths = authors.map((author) => ({ params: { slug: author.slug } }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const authorData = await getClient().fetch(singleAuthorQuery, {\n    slug: params.slug,\n  })\n\n  return { props: { authorData } }\n}\n\nexport default Author\n"]},"metadata":{},"sourceType":"module"}