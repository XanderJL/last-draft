{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/index.js\";\nimport { groq } from \"next-sanity\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport Layout from \"@components/Layout\";\nimport Hero from \"@components/Hero\";\nimport { Container, Flex, Grid, GridItem, Heading, Icon, Text, VStack } from \"@chakra-ui/react\";\nimport { PortableText } from \"@lib/sanity\";\nimport Link from \"@components/Link\";\nimport ContactForm from \"@components/Forms/ContactForm\";\n\nconst Home = ({\n  data\n}) => {\n  var _heroImage$metadata;\n\n  const {\n    heroImage,\n    heroCard,\n    cards,\n    cardsTitle,\n    contactHeading,\n    contactBody\n  } = data;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: heroImage === null || heroImage === void 0 ? void 0 : (_heroImage$metadata = heroImage.metadata) === null || _heroImage$metadata === void 0 ? void 0 : _heroImage$metadata.lqip,\n      image: heroImage === null || heroImage === void 0 ? void 0 : heroImage.url,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxW: \"container.xl\",\n        color: \"white\",\n        textShadow: \"2px 2px #000\",\n        children: /*#__PURE__*/_jsxDEV(PortableText, {\n          blocks: heroCard,\n          serializers: {\n            types: {\n              block: props => {\n                const {\n                  style = \"normal\"\n                } = props.node;\n\n                switch (style) {\n                  case \"h1\":\n                    return /*#__PURE__*/_jsxDEV(Heading, {\n                      size: \"4xl\",\n                      textTransform: \"uppercase\",\n                      pb: \"0.5rem\",\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 25\n                    }, this);\n\n                  case \"h2\":\n                    return /*#__PURE__*/_jsxDEV(Heading, {\n                      as: \"h2\",\n                      size: \"xl\",\n                      textTransform: \"uppercase\",\n                      pb: \"0.5rem\",\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 25\n                    }, this);\n\n                  default:\n                    return /*#__PURE__*/_jsxDEV(Text, {\n                      pb: \"1rem\",\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 30\n                    }, this);\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      p: {\n        base: \"3rem 1.25rem\",\n        md: \"7rem 1.25rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textAlign: \"center\",\n          textTransform: \"uppercase\",\n          children: cardsTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: {\n            base: \"minmax(0, 1fr)\",\n            md: \"repeat(3, 1fr)\"\n          },\n          gap: 12,\n          children: cards.map(card => {\n            const {\n              _key,\n              title,\n              body,\n              service,\n              icon\n            } = card;\n            return /*#__PURE__*/_jsxDEV(GridItem, {\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: `/services/#${service.slug}`,\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  direction: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    boxSize: 125,\n                    viewBox: \"0 0 80 80\",\n                    m: 10,\n                    children: /*#__PURE__*/_jsxDEV(\"image\", {\n                      href: icon.url,\n                      height: \"80\",\n                      width: \"80\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                    as: \"h2\",\n                    size: \"md\",\n                    pb: 2,\n                    textAlign: \"center\",\n                    textTransform: \"uppercase\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PortableText, {\n                blocks: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, _key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      minH: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxW: \"70ch\",\n        bg: \"black\",\n        color: \"white\",\n        children: \"Climpus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/_jsxDEV(ContactForm, {\n        title: contactHeading,\n        body: contactBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nconst homePageQuery = groq`\n  *[_type == \"indexPage\"]{\n    title,\n    metaDescription,\n    heroCard,\n    contactHeading,\n    contactBody,\n    \"heroImage\": heroImage.asset->{\n      url,\n      metadata,\n    },\n    cardsTitle,\n    cards[]{\n      _key,\n      title,\n      body,\n      \"icon\": icon.asset->{\n        url,\n        metadata,\n      },\n      service->{\n        \"slug\": slug.current,\n      },\n    },\n    testimonials[]->{\n      testimonial,\n      brandName,\n      brandRep,\n      repTitle,\n      brandUrl,\n      _id\n    },\n  }[0]\n`;\nexport const getStaticProps = async () => {\n  const data = await getClient().fetch(homePageQuery);\n  return {\n    props: {\n      data\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/index.js"],"names":["groq","getClient","Layout","Hero","Container","Flex","Grid","GridItem","Heading","Icon","Text","VStack","PortableText","Link","ContactForm","Home","data","heroImage","heroCard","cards","cardsTitle","contactHeading","contactBody","metadata","lqip","url","types","block","props","style","node","children","base","md","map","card","_key","title","body","service","icon","slug","homePageQuery","getStaticProps","fetch"],"mappings":";;AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,IAPF,EAQEC,MARF,QASO,kBATP;AAUA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACzB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA;AANI,MAOFN,IAPJ;AAQA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEC,SAAF,aAAEA,SAAF,8CAAEA,SAAS,CAAEM,QAAb,wDAAE,oBAAqBC,IAAxC;AAA8C,MAAA,KAAK,EAAEP,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEQ,GAAhE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,cAAhB;AAA+B,QAAA,KAAK,EAAC,OAArC;AAA6C,QAAA,UAAU,EAAC,cAAxD;AAAA,+BACE,QAAC,YAAD;AACE,UAAA,MAAM,EAAEP,QADV;AAEE,UAAA,WAAW,EAAE;AACXQ,YAAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAGC,KAAD,IAAW;AAChB,sBAAM;AAAEC,kBAAAA,KAAK,GAAG;AAAV,oBAAuBD,KAAK,CAACE,IAAnC;;AAEA,wBAAQD,KAAR;AACE,uBAAK,IAAL;AACE,wCACE,QAAC,OAAD;AACE,sBAAA,IAAI,EAAC,KADP;AAEE,sBAAA,aAAa,EAAC,WAFhB;AAGE,sBAAA,EAAE,EAAC,QAHL;AAAA,gCAKGD,KAAK,CAACG;AALT;AAAA;AAAA;AAAA;AAAA,4BADF;;AASF,uBAAK,IAAL;AACE,wCACE,QAAC,OAAD;AACE,sBAAA,EAAE,EAAC,IADL;AAEE,sBAAA,IAAI,EAAC,IAFP;AAGE,sBAAA,aAAa,EAAC,WAHhB;AAIE,sBAAA,EAAE,EAAC,QAJL;AAAA,gCAMGH,KAAK,CAACG;AANT;AAAA;AAAA;AAAA;AAAA,4BADF;;AAUF;AACE,wCAAO,QAAC,IAAD;AAAM,sBAAA,EAAE,EAAC,MAAT;AAAA,gCAAiBH,KAAK,CAACG;AAAvB;AAAA;AAAA;AAAA;AAAA,4BAAP;AAvBJ;AAyBD;AA7BI;AADI;AAFf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAyCE,QAAC,SAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,CAAC,EAAE;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,EAAE,EAAE;AAA5B,OAFL;AAAA,6BAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,CAAjB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAA4B,UAAA,aAAa,EAAC,WAA1C;AAAA,oBACGb;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AACE,UAAA,eAAe,EAAE;AAAEY,YAAAA,IAAI,EAAE,gBAAR;AAA0BC,YAAAA,EAAE,EAAE;AAA9B,WADnB;AAEE,UAAA,GAAG,EAAE,EAFP;AAAA,oBAIGd,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAU;AACnB,kBAAM;AAAEC,cAAAA,IAAF;AAAQC,cAAAA,KAAR;AAAeC,cAAAA,IAAf;AAAqBC,cAAAA,OAArB;AAA8BC,cAAAA;AAA9B,gBAAuCL,IAA7C;AACA,gCACE,QAAC,QAAD;AAAqB,cAAA,SAAS,EAAC,QAA/B;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAG,cAAaI,OAAO,CAACE,IAAK,EAAvC;AAAA,uCACE,QAAC,IAAD;AACE,kBAAA,SAAS,EAAC,QADZ;AAEE,kBAAA,cAAc,EAAC,QAFjB;AAGE,kBAAA,UAAU,EAAC,QAHb;AAAA,0CAKE,QAAC,IAAD;AAAM,oBAAA,OAAO,EAAE,GAAf;AAAoB,oBAAA,OAAO,EAAC,WAA5B;AAAwC,oBAAA,CAAC,EAAE,EAA3C;AAAA,2CACE;AAAO,sBAAA,IAAI,EAAED,IAAI,CAACf,GAAlB;AAAuB,sBAAA,MAAM,EAAC,IAA9B;AAAmC,sBAAA,KAAK,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BALF,eAQE,QAAC,OAAD;AACE,oBAAA,EAAE,EAAC,IADL;AAEE,oBAAA,IAAI,EAAC,IAFP;AAGE,oBAAA,EAAE,EAAE,CAHN;AAIE,oBAAA,SAAS,EAAC,QAJZ;AAKE,oBAAA,aAAa,EAAC,WALhB;AAAA,8BAOGY;AAPH;AAAA;AAAA;AAAA;AAAA,0BARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAqBE,QAAC,YAAD;AAAc,gBAAA,MAAM,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,sBArBF;AAAA,eAAeF,IAAf;AAAA;AAAA;AAAA;AAAA,oBADF;AAyBD,WA3BA;AAJH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAzCF,eAoFE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,MAAhB;AAAuB,QAAA,EAAE,EAAC,OAA1B;AAAkC,QAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApFF,eAyFE,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,cAAhB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEf,cAApB;AAAoC,QAAA,IAAI,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+FD,CAxGD;;AA0GA,MAAMoB,aAAa,GAAG1C,IAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjCA;AAmCA,OAAO,MAAM2C,cAAc,GAAG,YAAY;AACxC,QAAM3B,IAAI,GAAG,MAAMf,SAAS,GAAG2C,KAAZ,CAAkBF,aAAlB,CAAnB;AAEA,SAAO;AAAEd,IAAAA,KAAK,EAAE;AAAEZ,MAAAA;AAAF;AAAT,GAAP;AACD,CAJM;AAMP,eAAeD,IAAf","sourcesContent":["import { groq } from \"next-sanity\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport Layout from \"@components/Layout\"\nimport Hero from \"@components/Hero\"\nimport {\n  Container,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Icon,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\"\nimport { PortableText } from \"@lib/sanity\"\nimport Link from \"@components/Link\"\nimport ContactForm from \"@components/Forms/ContactForm\"\n\nconst Home = ({ data }) => {\n  const {\n    heroImage,\n    heroCard,\n    cards,\n    cardsTitle,\n    contactHeading,\n    contactBody,\n  } = data\n  return (\n    <Layout>\n      <Hero placeholder={heroImage?.metadata?.lqip} image={heroImage?.url}>\n        <Container maxW=\"container.xl\" color=\"white\" textShadow=\"2px 2px #000\">\n          <PortableText\n            blocks={heroCard}\n            serializers={{\n              types: {\n                block: (props) => {\n                  const { style = \"normal\" } = props.node\n\n                  switch (style) {\n                    case \"h1\":\n                      return (\n                        <Heading\n                          size=\"4xl\"\n                          textTransform=\"uppercase\"\n                          pb=\"0.5rem\"\n                        >\n                          {props.children}\n                        </Heading>\n                      )\n                    case \"h2\":\n                      return (\n                        <Heading\n                          as=\"h2\"\n                          size=\"xl\"\n                          textTransform=\"uppercase\"\n                          pb=\"0.5rem\"\n                        >\n                          {props.children}\n                        </Heading>\n                      )\n                    default:\n                      return <Text pb=\"1rem\">{props.children}</Text>\n                  }\n                },\n              },\n            }}\n          />\n        </Container>\n      </Hero>\n      <Container\n        maxW=\"container.xl\"\n        p={{ base: \"3rem 1.25rem\", md: \"7rem 1.25rem\" }}\n      >\n        <VStack spacing={4}>\n          <Heading textAlign=\"center\" textTransform=\"uppercase\">\n            {cardsTitle}\n          </Heading>\n          <Grid\n            templateColumns={{ base: \"minmax(0, 1fr)\", md: \"repeat(3, 1fr)\" }}\n            gap={12}\n          >\n            {cards.map((card) => {\n              const { _key, title, body, service, icon } = card\n              return (\n                <GridItem key={_key} textAlign=\"center\">\n                  <Link href={`/services/#${service.slug}`}>\n                    <Flex\n                      direction=\"column\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Icon boxSize={125} viewBox=\"0 0 80 80\" m={10}>\n                        <image href={icon.url} height=\"80\" width=\"80\" />\n                      </Icon>\n                      <Heading\n                        as=\"h2\"\n                        size=\"md\"\n                        pb={2}\n                        textAlign=\"center\"\n                        textTransform=\"uppercase\"\n                      >\n                        {title}\n                      </Heading>\n                    </Flex>\n                  </Link>\n                  <PortableText blocks={body} />\n                </GridItem>\n              )\n            })}\n          </Grid>\n        </VStack>\n      </Container>\n      <Hero minH=\"100vh\">\n        <Container maxW=\"70ch\" bg=\"black\" color=\"white\">\n          Climpus\n        </Container>\n      </Hero>\n      <Container maxW=\"container.xl\">\n        <ContactForm title={contactHeading} body={contactBody} />\n      </Container>\n    </Layout>\n  )\n}\n\nconst homePageQuery = groq`\n  *[_type == \"indexPage\"]{\n    title,\n    metaDescription,\n    heroCard,\n    contactHeading,\n    contactBody,\n    \"heroImage\": heroImage.asset->{\n      url,\n      metadata,\n    },\n    cardsTitle,\n    cards[]{\n      _key,\n      title,\n      body,\n      \"icon\": icon.asset->{\n        url,\n        metadata,\n      },\n      service->{\n        \"slug\": slug.current,\n      },\n    },\n    testimonials[]->{\n      testimonial,\n      brandName,\n      brandRep,\n      repTitle,\n      brandUrl,\n      _id\n    },\n  }[0]\n`\n\nexport const getStaticProps = async () => {\n  const data = await getClient().fetch(homePageQuery)\n\n  return { props: { data } }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}