{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createClient } from \"next-sanity\";\nimport { config } from \"./config\"; // Set up the client for fetching data in the getProps page functions\n\nexport const sanityClient = createClient(config); // Set up a preview client with serverless authentication for drafts\n\nexport const previewClient = createClient(_objectSpread(_objectSpread({}, config), {}, {\n  useCdn: false,\n  token: process.env.SANITY_API_TOKEN\n})); // Helper function for easily switching between normal client and preview client\n\nexport const getClient = usePreview => usePreview ? previewClient : sanityClient;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/lib/sanity.server.js"],"names":["createClient","config","sanityClient","previewClient","useCdn","token","process","env","SANITY_API_TOKEN","getClient","usePreview"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,aAA7B;AACA,SAASC,MAAT,QAAuB,UAAvB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAGF,YAAY,CAACC,MAAD,CAAjC,C,CAEP;;AACA,OAAO,MAAME,aAAa,GAAGH,YAAY,iCACpCC,MADoC;AAEvCG,EAAAA,MAAM,EAAE,KAF+B;AAGvCC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHoB,GAAlC,C,CAMP;;AACA,OAAO,MAAMC,SAAS,GAAIC,UAAD,IACvBA,UAAU,GAAGP,aAAH,GAAmBD,YADxB","sourcesContent":["import { createClient } from \"next-sanity\"\nimport { config } from \"./config\"\n\n// Set up the client for fetching data in the getProps page functions\nexport const sanityClient = createClient(config)\n\n// Set up a preview client with serverless authentication for drafts\nexport const previewClient = createClient({\n  ...config,\n  useCdn: false,\n  token: process.env.SANITY_API_TOKEN,\n})\n\n// Helper function for easily switching between normal client and preview client\nexport const getClient = (usePreview) =>\n  usePreview ? previewClient : sanityClient\n"]},"metadata":{},"sourceType":"module"}