{"ast":null,"code":"export default function toPlainText(blocks = []) {\n  return blocks.map(block => {\n    if (block._type !== \"block\" || !block.children) {\n      return \"\";\n    }\n\n    return block.children.map(child => child.text).join(\"\");\n  }).join(\"\\n\\n\");\n}","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/util/toPlainText.js"],"names":["toPlainText","blocks","map","block","_type","children","child","text","join"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,MAAM,GAAG,EAA9B,EAAkC;AAC/C,SAAOA,MAAM,CACVC,GADI,CACAC,KAAK,IAAI;AACZ,QAAIA,KAAK,CAACC,KAAN,KAAgB,OAAhB,IAA2B,CAACD,KAAK,CAACE,QAAtC,EAAgD;AAC9C,aAAO,EAAP;AACD;;AACD,WAAOF,KAAK,CAACE,QAAN,CAAeH,GAAf,CAAmBI,KAAK,IAAIA,KAAK,CAACC,IAAlC,EAAwCC,IAAxC,CAA6C,EAA7C,CAAP;AACD,GANI,EAOJA,IAPI,CAOC,MAPD,CAAP;AAQD","sourcesContent":["export default function toPlainText(blocks = []) {\n  return blocks\n    .map(block => {\n      if (block._type !== \"block\" || !block.children) {\n        return \"\"\n      }\n      return block.children.map(child => child.text).join(\"\")\n    })\n    .join(\"\\n\\n\")\n}"]},"metadata":{},"sourceType":"module"}