{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/alexander/github/XanderJL/last-draft/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/team/[slug].js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Container, Grid, GridItem, Heading, VStack, List, ListItem, HStack, Image } from \"@chakra-ui/react\";\nimport { PortableText, serializers } from \"@lib/sanity\";\nimport Layout from \"@components/Layout\";\nimport EmployeeSocials from \"@components/EmployeeSocials\";\n\nvar Member = function Member(_ref) {\n  var _headshot$metadata;\n\n  var data = _ref.data;\n  var firstName = data.firstName,\n      lastName = data.lastName,\n      headshot = data.headshot,\n      jobTitle = data.jobTitle,\n      quote = data.quote,\n      bio = data.bio,\n      education = data.education,\n      projects = data.projects,\n      socials = data.socials;\n\n  var customSerializers = _objectSpread(_objectSpread({}, serializers), {}, {\n    list: function list(props) {\n      return /*#__PURE__*/_jsxDEV(List, {\n        listStyleType: \"circle\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, _this);\n    },\n    listItem: function listItem(props) {\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, _this);\n    }\n  });\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      display: \"flex\",\n      p: {\n        base: \"3rem 1.25rem\",\n        md: \"5rem 1.25rem\"\n      },\n      maxW: \"container.xl\",\n      flex: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        flex: 1,\n        minH: {\n          base: \"80vh\",\n          lg: \"70vh\"\n        },\n        templateColumns: {\n          base: \"minmax(0, 1fr)\",\n          md: \"repeat(2, 1fr)\"\n        },\n        gap: {\n          base: 8,\n          md: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          display: \"flex\",\n          flexDir: \"column\",\n          justifyContent: \"space-between\",\n          colStart: {\n            base: 1\n          },\n          rowStart: {\n            base: 2,\n            md: 1\n          },\n          pt: {\n            md: \"3rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            flex: 1,\n            maxW: \"70ch\",\n            align: \"flex-start\",\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                textTransform: \"uppercase\",\n                children: [firstName, \" \", lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(HStack, {\n                align: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Heading, {\n                  as: \"h2\",\n                  size: \"md\",\n                  textTransform: \"uppercase\",\n                  color: \"gray.700\",\n                  lineHeight: 1,\n                  children: jobTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, _this), socials && /*#__PURE__*/_jsxDEV(EmployeeSocials, {\n                  socials: socials,\n                  color: \"gray.600\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, _this), quote && /*#__PURE__*/_jsxDEV(Box, {\n              color: \"gray.600\",\n              py: \"1.25rem\",\n              fontSize: \"lg\",\n              fontStyle: \"italic\",\n              children: /*#__PURE__*/_jsxDEV(PortableText, {\n                blocks: quote,\n                serializers: serializers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, _this), bio && /*#__PURE__*/_jsxDEV(PortableText, {\n              blocks: bio,\n              serializers: serializers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(VStack, {\n            flex: 1,\n            w: \"100%\",\n            align: \"flex-start\",\n            pt: \"2rem\",\n            spacing: 12,\n            children: [projects && /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                as: \"h2\",\n                size: \"md\",\n                textTransform: \"uppercase\",\n                children: \"Areas of Expertise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(PortableText, {\n                blocks: projects,\n                serializers: customSerializers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, _this), education && /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"flex-start\",\n              children: [/*#__PURE__*/_jsxDEV(Heading, {\n                as: \"h2\",\n                size: \"md\",\n                textTransform: \"uppercase\",\n                children: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(PortableText, {\n                blocks: education,\n                serializers: customSerializers\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          colStart: {\n            base: 1,\n            md: 2\n          },\n          rowStart: {\n            base: 1,\n            md: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            w: \"100%\",\n            h: \"100%\",\n            src: headshot === null || headshot === void 0 ? void 0 : headshot.url,\n            alt: \"Headshot of  \".concat(firstName, \" \").concat(lastName),\n            objectFit: \"cover\",\n            bgImage: headshot === null || headshot === void 0 ? void 0 : (_headshot$metadata = headshot.metadata) === null || _headshot$metadata === void 0 ? void 0 : _headshot$metadata.lqip,\n            bgSize: \"cover\",\n            bgRepeat: \"no-repeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Member;\nexport var __N_SSG = true;\nexport default Member;\n\nvar _c;\n\n$RefreshReg$(_c, \"Member\");","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/team/[slug].js"],"names":["Box","Container","Grid","GridItem","Heading","VStack","List","ListItem","HStack","Image","PortableText","serializers","Layout","EmployeeSocials","Member","data","firstName","lastName","headshot","jobTitle","quote","bio","education","projects","socials","customSerializers","list","props","children","listItem","base","md","lg","url","metadata","lqip"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Container,\n  Grid,\n  GridItem,\n  Heading,\n  VStack,\n  List,\n  ListItem,\n  HStack,\n  Image,\n} from \"@chakra-ui/react\"\nimport { groq } from \"next-sanity\"\nimport { PortableText, serializers } from \"@lib/sanity\"\nimport Layout from \"@components/Layout\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport EmployeeSocials from \"@components/EmployeeSocials\"\n\nconst Member = ({ data }) => {\n  const {\n    firstName,\n    lastName,\n    headshot,\n    jobTitle,\n    quote,\n    bio,\n    education,\n    projects,\n    socials,\n  } = data\n\n  const customSerializers = {\n    ...serializers,\n    list: (props) => <List listStyleType=\"circle\">{props.children}</List>,\n    listItem: (props) => <ListItem>{props.children}</ListItem>,\n  }\n\n  return (\n    <Layout>\n      <Container\n        display=\"flex\"\n        p={{ base: \"3rem 1.25rem\", md: \"5rem 1.25rem\" }}\n        maxW=\"container.xl\"\n        flex={1}\n      >\n        <Grid\n          flex={1}\n          minH={{ base: \"80vh\", lg: \"70vh\" }}\n          templateColumns={{ base: \"minmax(0, 1fr)\", md: \"repeat(2, 1fr)\" }}\n          gap={{ base: 8, md: 16 }}\n        >\n          <GridItem\n            display=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"space-between\"\n            colStart={{ base: 1 }}\n            rowStart={{ base: 2, md: 1 }}\n            pt={{ md: \"3rem\" }}\n          >\n            <VStack flex={1} maxW=\"70ch\" align=\"flex-start\" spacing={4}>\n              <Box>\n                <Heading textTransform=\"uppercase\">\n                  {firstName} {lastName}\n                </Heading>\n                <HStack align=\"center\">\n                  <Heading\n                    as=\"h2\"\n                    size=\"md\"\n                    textTransform=\"uppercase\"\n                    color=\"gray.700\"\n                    lineHeight={1}\n                  >\n                    {jobTitle}\n                  </Heading>\n                  {socials && (\n                    <EmployeeSocials socials={socials} color=\"gray.600\" />\n                  )}\n                </HStack>\n              </Box>\n              {quote && (\n                <Box\n                  color=\"gray.600\"\n                  py=\"1.25rem\"\n                  fontSize=\"lg\"\n                  fontStyle=\"italic\"\n                >\n                  <PortableText blocks={quote} serializers={serializers} />\n                </Box>\n              )}\n              {bio && <PortableText blocks={bio} serializers={serializers} />}\n            </VStack>\n            <VStack flex={1} w=\"100%\" align=\"flex-start\" pt=\"2rem\" spacing={12}>\n              {projects && (\n                <VStack align=\"flex-start\">\n                  <Heading as=\"h2\" size=\"md\" textTransform=\"uppercase\">\n                    Areas of Expertise\n                  </Heading>\n                  <PortableText\n                    blocks={projects}\n                    serializers={customSerializers}\n                  />\n                </VStack>\n              )}\n              {education && (\n                <VStack align=\"flex-start\">\n                  <Heading as=\"h2\" size=\"md\" textTransform=\"uppercase\">\n                    Education\n                  </Heading>\n                  <PortableText\n                    blocks={education}\n                    serializers={customSerializers}\n                  />\n                </VStack>\n              )}\n            </VStack>\n          </GridItem>\n          <GridItem colStart={{ base: 1, md: 2 }} rowStart={{ base: 1, md: 1 }}>\n            <Image\n              w=\"100%\"\n              h=\"100%\"\n              src={headshot?.url}\n              alt={`Headshot of  ${firstName} ${lastName}`}\n              objectFit=\"cover\"\n              bgImage={headshot?.metadata?.lqip}\n              bgSize=\"cover\"\n              bgRepeat=\"no-repeat\"\n            />\n          </GridItem>\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\nconst employeesQuery = groq`*[_type == \"employee\"]{ \"slug\": slug.current }`\nconst singleEmployeeQuery = groq`\n  *[_type == \"employee\" && slug.current == $slug]{\n    firstName,\n    lastName,\n    \"headshot\": headshot.asset->{\n      metadata,\n      url\n    },\n    jobTitle,\n    quote,\n    bio,\n    education,\n    projects,\n    socials[]\n  }[0]\n`\n\nexport const getStaticPaths = async () => {\n  const employees = await getClient().fetch(employeesQuery)\n  const paths = employees.map((employee) => ({\n    params: { slug: employee.slug },\n  }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const data = await getClient().fetch(singleEmployeeQuery, {\n    slug: params.slug,\n  })\n\n  return { props: { data } }\n}\n\nexport default Member\n"]},"metadata":{},"sourceType":"module"}