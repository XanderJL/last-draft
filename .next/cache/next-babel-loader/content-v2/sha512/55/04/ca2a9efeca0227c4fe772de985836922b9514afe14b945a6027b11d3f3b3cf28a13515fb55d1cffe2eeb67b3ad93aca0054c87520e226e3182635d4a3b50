{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/index.js\";\nimport { Container, Heading, Text } from \"@chakra-ui/react\";\nimport { groq } from \"next-sanity\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport Layout from \"@components/Layout\";\nimport Hero from \"@components/Hero\";\nimport BlogTabs from \"@components/BlogTabs\";\nimport { PortableText } from \"@lib/sanity\";\nimport Section from \"@components/Layout/Section\";\nimport PostCard from \"@components/Cards/PostCard\";\nimport CardGrid from \"@components/Layout/Grids/CardGrid\";\nimport SubmitForm from \"@components/Forms/SubmitForm\";\nimport OptInModal from \"@components/Modals/OptInModal\";\nimport Link from \"@components/Link\";\nimport toPlainText from \"util/toPlainText\";\n\nconst Stories = ({\n  blogData,\n  recentPostData\n}) => {\n  var _heroImage$metadata;\n\n  const {\n    heroImage,\n    pubBody,\n    categories\n  } = blogData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: heroImage === null || heroImage === void 0 ? void 0 : (_heroImage$metadata = heroImage.metadata) === null || _heroImage$metadata === void 0 ? void 0 : _heroImage$metadata.lqip,\n      image: heroImage === null || heroImage === void 0 ? void 0 : heroImage.url,\n      minH: \"36em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: [/*#__PURE__*/_jsxDEV(BlogTabs, {\n        categories: categories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(PortableText, {\n          blocks: pubBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textTransform: \"uppercase\",\n          pb: \"1.5rem\",\n          children: \"Recent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n          children: recentPostData.map(post => {\n            var _mainImage$metadata;\n\n            const {\n              _id,\n              title,\n              mainImage,\n              slug,\n              category\n            } = post;\n            return /*#__PURE__*/_jsxDEV(PostCard, {\n              title: title,\n              placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata = mainImage.metadata) === null || _mainImage$metadata === void 0 ? void 0 : _mainImage$metadata.lqip,\n              image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n              link: `/${category === null || category === void 0 ? void 0 : category.slug}/${slug}`,\n              children: \"brunkus\"\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), categories.map(category => {\n        const {\n          _id,\n          title,\n          slug,\n          description,\n          posts\n        } = category;\n        return /*#__PURE__*/_jsxDEV(Section, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            textTransform: \"uppercase\",\n            pb: \"0.5rem\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), description && /*#__PURE__*/_jsxDEV(Text, {\n            pb: \"1.5rem\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n            pb: 8,\n            children: posts.map(post => {\n              var _mainImage$metadata2;\n\n              const {\n                _id,\n                title,\n                mainImage,\n                slug,\n                category,\n                previewCopy,\n                body\n              } = post;\n              return /*#__PURE__*/_jsxDEV(PostCard, {\n                title: title,\n                placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata2 = mainImage.metadata) === null || _mainImage$metadata2 === void 0 ? void 0 : _mainImage$metadata2.lqip,\n                image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n                link: `/${category === null || category === void 0 ? void 0 : category.slug}/${slug}`,\n                children: previewCopy ? previewCopy : toPlainText(body).slice(0, 124) + \"...\"\n              }, _id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            href: `/stories/${slug}`,\n            p: \"1rem 1.25rem\",\n            bg: \"black\",\n            color: \"white\",\n            _hover: {\n              bg: \"cyan.400\"\n            },\n            children: \"More Articles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(SubmitForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptInModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nconst blogQuery = groq`\n*[_type == \"blog\"]{\n  title,\n  \"slug\": slug.current,\n  \"heroImage\": heroImage.asset->{\n    metadata,\n    url\n  },\n  \"pubBody\": publication.body,\n  featuredPosts[]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  },\n  categories[!defined(parentCategory)]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    description,\n    \"posts\": *[_type == \"post\" && references(^._id)] | order(publishedAt desc) {\n      _id,\n      publishedAt,\n      \"slug\": slug.current,\n      title,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      previewCopy,\n      body,\n      category->{\n        \"slug\": slug.current\n      },\n      parentCategory->{\n        \"slug\": slug.current\n      }\n    }[0..2]\n  }\n}[0]\n`;\nconst recentPostsQuery = groq`\n  *[_type == \"post\"] | order(publishedAt desc){\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }[0..2]\n`;\nexport const getStaticProps = async () => {\n  const blogData = await getClient().fetch(blogQuery);\n  const recentPostData = await getClient().fetch(recentPostsQuery);\n  return {\n    props: {\n      blogData,\n      recentPostData\n    }\n  };\n};\nexport default Stories;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/index.js"],"names":["Container","Heading","Text","groq","getClient","Layout","Hero","BlogTabs","PortableText","Section","PostCard","CardGrid","SubmitForm","OptInModal","Link","toPlainText","Stories","blogData","recentPostData","heroImage","pubBody","categories","metadata","lqip","url","map","post","_id","title","mainImage","slug","category","description","posts","previewCopy","body","slice","bg","blogQuery","recentPostsQuery","getStaticProps","fetch","props"],"mappings":"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","sourcesContent":["import { Container, Heading, Text } from \"@chakra-ui/react\"\nimport { groq } from \"next-sanity\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport Layout from \"@components/Layout\"\nimport Hero from \"@components/Hero\"\nimport BlogTabs from \"@components/BlogTabs\"\nimport { PortableText } from \"@lib/sanity\"\nimport Section from \"@components/Layout/Section\"\nimport PostCard from \"@components/Cards/PostCard\"\nimport CardGrid from \"@components/Layout/Grids/CardGrid\"\nimport SubmitForm from \"@components/Forms/SubmitForm\"\nimport OptInModal from \"@components/Modals/OptInModal\"\nimport Link from \"@components/Link\"\nimport toPlainText from \"util/toPlainText\"\n\nconst Stories = ({ blogData, recentPostData }) => {\n  const { heroImage, pubBody, categories } = blogData\n\n  return (\n    <Layout>\n      <Hero\n        placeholder={heroImage?.metadata?.lqip}\n        image={heroImage?.url}\n        minH=\"36em\"\n      />\n      <Container maxW=\"container.xl\">\n        <BlogTabs categories={categories} />\n        <Section>\n          <PortableText blocks={pubBody} />\n        </Section>\n        <Section>\n          <Heading textTransform=\"uppercase\" pb=\"1.5rem\">\n            Recent\n          </Heading>\n          <CardGrid>\n            {recentPostData.map((post) => {\n              const { _id, title, mainImage, slug, category } = post\n              return (\n                <PostCard\n                  key={_id}\n                  title={title}\n                  placeholder={mainImage?.metadata?.lqip}\n                  image={mainImage?.url}\n                  link={`/${category?.slug}/${slug}`}\n                >\n                  brunkus\n                </PostCard>\n              )\n            })}\n          </CardGrid>\n        </Section>\n        {categories.map((category) => {\n          const { _id, title, slug, description, posts } = category\n          return (\n            <Section key={_id}>\n              <Heading textTransform=\"uppercase\" pb=\"0.5rem\">\n                {title}\n              </Heading>\n              {description && <Text pb=\"1.5rem\">{description}</Text>}\n              <CardGrid pb={8}>\n                {posts.map((post) => {\n                  const { _id, title, mainImage, slug, category, previewCopy, body } =\n                    post\n                  return (\n                    <PostCard\n                      key={_id}\n                      title={title}\n                      placeholder={mainImage?.metadata?.lqip}\n                      image={mainImage?.url}\n                      link={`/${category?.slug}/${slug}`}\n                    >\n                      {previewCopy\n                        ? previewCopy\n                        : toPlainText(body).slice(0, 124) + \"...\"}\n                    </PostCard>\n                  )\n                })}\n              </CardGrid>\n              <Link\n                href={`/stories/${slug}`}\n                p=\"1rem 1.25rem\"\n                bg=\"black\"\n                color=\"white\"\n                _hover={{ bg: \"cyan.400\" }}\n              >\n                More Articles\n              </Link>\n            </Section>\n          )\n        })}\n        <Section>\n          <SubmitForm />\n        </Section>\n      </Container>\n      <OptInModal />\n    </Layout>\n  )\n}\n\nconst blogQuery = groq`\n*[_type == \"blog\"]{\n  title,\n  \"slug\": slug.current,\n  \"heroImage\": heroImage.asset->{\n    metadata,\n    url\n  },\n  \"pubBody\": publication.body,\n  featuredPosts[]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  },\n  categories[!defined(parentCategory)]->{\n    _id,\n    title,\n    \"slug\": slug.current,\n    description,\n    \"posts\": *[_type == \"post\" && references(^._id)] | order(publishedAt desc) {\n      _id,\n      publishedAt,\n      \"slug\": slug.current,\n      title,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      previewCopy,\n      body,\n      category->{\n        \"slug\": slug.current\n      },\n      parentCategory->{\n        \"slug\": slug.current\n      }\n    }[0..2]\n  }\n}[0]\n`\n\nconst recentPostsQuery = groq`\n  *[_type == \"post\"] | order(publishedAt desc){\n    _id,\n    title,\n    \"slug\": slug.current,\n    category->{\n      \"slug\": slug.current,\n      title\n    },\n    body,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    }\n  }[0..2]\n`\n\nexport const getStaticProps = async () => {\n  const blogData = await getClient().fetch(blogQuery)\n  const recentPostData = await getClient().fetch(recentPostsQuery)\n\n  return { props: { blogData, recentPostData } }\n}\n\nexport default Stories\n"]},"metadata":{},"sourceType":"module"}