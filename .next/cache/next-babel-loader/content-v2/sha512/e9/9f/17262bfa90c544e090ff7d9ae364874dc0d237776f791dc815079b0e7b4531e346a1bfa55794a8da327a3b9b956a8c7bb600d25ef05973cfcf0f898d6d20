{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/authors/[slug].js\";\nimport { Container, Heading, Image } from \"@chakra-ui/react\";\nimport AuthorBio from \"@components/AuthorBio\";\nimport Layout from \"@components/Layout\";\nimport Section from \"@components/Layout/Section\";\nimport Link from \"@components/Link\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport { groq } from \"next-sanity\";\n\nconst Author = ({\n  authorData\n}) => {\n  const {\n    _id,\n    name,\n    bio,\n    slug,\n    image,\n    posts\n  } = authorData;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"70ch\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(AuthorBio, {\n          name: name,\n          image: image,\n          slug: slug,\n          bio: bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          textTransform: \"uppercase\",\n          children: \"Latest Stories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), posts.map(post => {\n          const {\n            _id,\n            author,\n            publishedAt,\n            mainImage,\n            title,\n            body,\n            category,\n            slug: postSlug\n          } = post;\n          const authorLink = `/stories/authors/${slug}`;\n          const categoryLink = `/stories/${category.slug}`;\n          const postLink = categoryLink + `/${postSlug}`;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header-icon\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: authorLink,\n                  className: \"\",\n                  children: image && /*#__PURE__*/_jsxDEV(Image, {\n                    src: image === null || image === void 0 ? void 0 : image.url,\n                    options: {\n                      width: 50,\n                      height: 50\n                    },\n                    imgStyle: {\n                      width: \"100%\",\n                      height: \"auto\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header-title\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"is-montserrat is-size-5\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: authorLink,\n                    children: name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 23\n                  }, this), \" in\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                    to: categoryLink,\n                    children: [category.title, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 23\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"is-montserrat has-text-grey\",\n                  children: _createdAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: postLink,\n                children: /*#__PURE__*/_jsxDEV(SanityImage, {\n                  className: \"image\",\n                  image: mainImage.asset,\n                  options: {\n                    maxWidth: 1600,\n                    maxHeight: 900\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"title is-montserrat is-uppercase is-size-4-mobile\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: toPlainText(_rawBody).slice(0, 119) + \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: postLink,\n                className: \"button is-montserrat\",\n                children: \"Read \\u203A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, _id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\nconst singleAuthorQuery = groq`\n  *[_type == \"author\" && slug.current == $slug]{\n    _id,\n    name,\n    bio,\n    \"slug\": slug.current,\n    \"image\": image.asset->{\n      metadata,\n      url\n    },\n    \"posts\": *[_type == \"post\" && references(^._id)]{\n      _id,\n      publishedAt,\n      title,\n      body,\n      \"slug\": slug.current,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      category->{\n        title,\n        \"slug\": slug.current\n      }\n    }\n  }[0]\n`;\nexport const getStaticPaths = async () => {\n  const authors = await getClient().fetch(groq`*[_type == \"author\"]{ \"slug\": slug.current }`);\n  const paths = authors.map(author => ({\n    params: {\n      slug: author.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const authorData = await getClient().fetch(singleAuthorQuery, {\n    slug: params.slug\n  });\n  return {\n    props: {\n      authorData\n    }\n  };\n};\nexport default Author;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/authors/[slug].js"],"names":["Container","Heading","Image","AuthorBio","Layout","Section","Link","getClient","groq","Author","authorData","_id","name","bio","slug","image","posts","map","post","author","publishedAt","mainImage","title","body","category","postSlug","authorLink","categoryLink","postLink","url","width","height","_createdAt","asset","maxWidth","maxHeight","toPlainText","_rawBody","slice","singleAuthorQuery","getStaticPaths","authors","fetch","paths","params","fallback","getStaticProps","props"],"mappings":"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","sourcesContent":["import { Container, Heading, Image } from \"@chakra-ui/react\"\nimport AuthorBio from \"@components/AuthorBio\"\nimport Layout from \"@components/Layout\"\nimport Section from \"@components/Layout/Section\"\nimport Link from \"@components/Link\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport { groq } from \"next-sanity\"\n\nconst Author = ({ authorData }) => {\n  const { _id, name, bio, slug, image, posts } = authorData\n  return (\n    <Layout>\n      <Container maxW=\"70ch\">\n        <Section>\n          <AuthorBio name={name} image={image} slug={slug} bio={bio} />\n        </Section>\n        <Section>\n          <Heading as=\"h3\" textTransform=\"uppercase\">\n            Latest Stories\n          </Heading>\n          {posts.map((post) => {\n            const {\n              _id,\n              author,\n              publishedAt,\n              mainImage,\n              title,\n              body,\n              category,\n              slug: postSlug,\n            } = post\n            const authorLink = `/stories/authors/${slug}`\n            const categoryLink = `/stories/${category.slug}`\n            const postLink = categoryLink + `/${postSlug}`\n\n            return (\n              <div key={_id} className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"card-header-icon\">\n                    <Link href={authorLink} className=\"\">\n                      {image && (\n                        <Image\n                          src={image?.url}\n                          options={{ width: 50, height: 50 }}\n                          imgStyle={{ width: \"100%\", height: \"auto\" }}\n                        />\n                      )}\n                    </Link>\n                  </div>\n                  <div className=\"card-header-title\">\n                    <h3 className=\"is-montserrat is-size-5\">\n                      <Link to={authorLink}>{name}</Link> in{\" \"}\n                      <Link to={categoryLink}>{category.title} </Link>{\" \"}\n                    </h3>\n                    <h3 className=\"is-montserrat has-text-grey\">\n                      {_createdAt}\n                    </h3>\n                  </div>\n                </div>\n                <div className=\"card-image\">\n                  <Link to={postLink}>\n                    <SanityImage\n                      className=\"image\"\n                      image={mainImage.asset}\n                      options={{ maxWidth: 1600, maxHeight: 900 }}\n                    />\n                  </Link>\n                </div>\n                <div className=\"card-content\">\n                  <div className=\"content\">\n                    <h2 className=\"title is-montserrat is-uppercase is-size-4-mobile\">\n                      {title}\n                    </h2>\n                    <p>{toPlainText(_rawBody).slice(0, 119) + \"...\"}</p>\n                  </div>\n                  <Link to={postLink} className=\"button is-montserrat\">\n                    Read &rsaquo;\n                  </Link>\n                </div>\n              </div>\n            )\n          })}\n        </Section>\n      </Container>\n    </Layout>\n  )\n}\n\nconst singleAuthorQuery = groq`\n  *[_type == \"author\" && slug.current == $slug]{\n    _id,\n    name,\n    bio,\n    \"slug\": slug.current,\n    \"image\": image.asset->{\n      metadata,\n      url\n    },\n    \"posts\": *[_type == \"post\" && references(^._id)]{\n      _id,\n      publishedAt,\n      title,\n      body,\n      \"slug\": slug.current,\n      \"mainImage\": mainImage.asset->{\n        metadata,\n        url\n      },\n      category->{\n        title,\n        \"slug\": slug.current\n      }\n    }\n  }[0]\n`\n\nexport const getStaticPaths = async () => {\n  const authors = await getClient().fetch(\n    groq`*[_type == \"author\"]{ \"slug\": slug.current }`\n  )\n  const paths = authors.map((author) => ({ params: { slug: author.slug } }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const authorData = await getClient().fetch(singleAuthorQuery, {\n    slug: params.slug,\n  })\n\n  return { props: { authorData } }\n}\n\nexport default Author\n"]},"metadata":{},"sourceType":"module"}