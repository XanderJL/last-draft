{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/components/Layout/Grids/CardGrid.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Grid } from \"@chakra-ui/react\";\n\nconst CardGrid = (_ref) => {\n  let {\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return /*#__PURE__*/_jsxDEV(Grid, _objectSpread(_objectSpread({\n    templateColumns: {\n      base: \"minmax(0, 1fr)\",\n      md: \"repeat(auto-fill, minmax(280px, 1fr))\"\n    },\n    gap: 8\n  }, rest), {}, {\n    children: children\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CardGrid;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/components/Layout/Grids/CardGrid.js"],"names":["Grid","CardGrid","children","rest","base","md"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,QAAQ,GAAG,UAA2B;AAAA,MAA1B;AAAEC,IAAAA;AAAF,GAA0B;AAAA,MAAXC,IAAW;;AAC1C,sBACE,QAAC,IAAD;AACE,IAAA,eAAe,EAAE;AACfC,MAAAA,IAAI,EAAE,gBADS;AAEfC,MAAAA,EAAE,EAAE;AAFW,KADnB;AAKE,IAAA,GAAG,EAAE;AALP,KAMMF,IANN;AAAA,cAQGD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;AAeA,eAAeD,QAAf","sourcesContent":["import { Grid } from \"@chakra-ui/react\"\n\nconst CardGrid = ({ children, ...rest }) => {\n  return (\n    <Grid\n      templateColumns={{\n        base: \"minmax(0, 1fr)\",\n        md: \"repeat(auto-fill, minmax(280px, 1fr))\",\n      }}\n      gap={8}\n      {...rest}\n    >\n      {children}\n    </Grid>\n  )\n}\n\nexport default CardGrid\n"]},"metadata":{},"sourceType":"module"}