{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/stories/[category]/[post].js\",\n    _this = this;\n\nimport { Container, Heading, Text } from \"@chakra-ui/layout\";\nimport Hero from \"@components/Hero\";\nimport { SolidHr } from \"@components/Hr\";\nimport Layout from \"@components/Layout\";\nimport Section from \"@components/Layout/Section\";\nimport Link from \"@components/Link\";\nimport { PortableText } from \"@lib/sanity\";\n\nvar Post = function Post(_ref) {\n  var _mainImage$metadata;\n\n  var postData = _ref.postData;\n  var title = postData.title,\n      author = postData.author,\n      publishedAt = postData.publishedAt,\n      tags = postData.tags,\n      mainImage = postData.mainImage,\n      mainAlt = postData.mainAlt,\n      mainCaption = postData.mainCaption,\n      body = postData.body;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: mainImage === null || mainImage === void 0 ? void 0 : (_mainImage$metadata = mainImage.metadata) === null || _mainImage$metadata === void 0 ? void 0 : _mainImage$metadata.lqip,\n      image: mainImage === null || mainImage === void 0 ? void 0 : mainImage.url,\n      minH: \"36em\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.md\",\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textTransform: \"uppercase\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/stories/authors/\".concat(author.slug),\n          textTransform: \"uppercase\",\n          children: author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Text, {\n          children: new Date(publishedAt).toLocaleDateString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), mainCaption && /*#__PURE__*/_jsxDEV(Section, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: mainCaption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(PortableText, {\n          blocks: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(SolidHr, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/stories/[category]/[post].js"],"names":["Container","Heading","Text","Hero","SolidHr","Layout","Section","Link","PortableText","Post","postData","title","author","publishedAt","tags","mainImage","mainAlt","mainCaption","body","metadata","lqip","url","slug","name","Date","toLocaleDateString","month","day","year"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAAA,MAE3BC,KAF2B,GAUzBD,QAVyB,CAE3BC,KAF2B;AAAA,MAG3BC,MAH2B,GAUzBF,QAVyB,CAG3BE,MAH2B;AAAA,MAI3BC,WAJ2B,GAUzBH,QAVyB,CAI3BG,WAJ2B;AAAA,MAK3BC,IAL2B,GAUzBJ,QAVyB,CAK3BI,IAL2B;AAAA,MAM3BC,SAN2B,GAUzBL,QAVyB,CAM3BK,SAN2B;AAAA,MAO3BC,OAP2B,GAUzBN,QAVyB,CAO3BM,OAP2B;AAAA,MAQ3BC,WAR2B,GAUzBP,QAVyB,CAQ3BO,WAR2B;AAAA,MAS3BC,IAT2B,GAUzBR,QAVyB,CAS3BQ,IAT2B;AAY7B,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,WAAW,EAAEH,SAAF,aAAEA,SAAF,8CAAEA,SAAS,CAAEI,QAAb,wDAAE,oBAAqBC,IADpC;AAEE,MAAA,KAAK,EAAEL,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEM,GAFpB;AAGE,MAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,aADF,eAME,QAAC,SAAD;AAAW,MAAA,IAAI,EAAC,cAAhB;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,aAAa,EAAC,WAAvB;AAAA,oBAAoCV;AAApC;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,IAAD;AACE,UAAA,IAAI,6BAAsBC,MAAM,CAACU,IAA7B,CADN;AAEE,UAAA,aAAa,EAAC,WAFhB;AAAA,oBAIGV,MAAM,CAACW;AAJV;AAAA;AAAA;AAAA;AAAA,iBAFF,eAQE,QAAC,IAAD;AAAA,oBACG,IAAIC,IAAJ,CAASX,WAAT,EAAsBY,kBAAtB,CAAyC,OAAzC,EAAkD;AACjDC,YAAAA,KAAK,EAAE,MAD0C;AAEjDC,YAAAA,GAAG,EAAE,SAF4C;AAGjDC,YAAAA,IAAI,EAAE;AAH2C,WAAlD;AADH;AAAA;AAAA;AAAA;AAAA,iBARF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAiBGX,WAAW,iBACV,QAAC,OAAD;AAAA,+BACE,QAAC,IAAD;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAlBJ,eAsBE,QAAC,OAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEC;AAAtB;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,iBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,eAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAoCD,CAhDD;;KAAMT,I;;AAoGN,eAAeA,IAAf","sourcesContent":["import { Container, Heading, Text } from \"@chakra-ui/layout\"\nimport Hero from \"@components/Hero\"\nimport { SolidHr } from \"@components/Hr\"\nimport Layout from \"@components/Layout\"\nimport Section from \"@components/Layout/Section\"\nimport Link from \"@components/Link\"\nimport { PortableText } from \"@lib/sanity\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport { groq } from \"next-sanity\"\n\nconst Post = ({ postData }) => {\n  const {\n    title,\n    author,\n    publishedAt,\n    tags,\n    mainImage,\n    mainAlt,\n    mainCaption,\n    body,\n  } = postData\n\n  return (\n    <Layout>\n      <Hero\n        placeholder={mainImage?.metadata?.lqip}\n        image={mainImage?.url}\n        minH=\"36em\"\n      />\n      <Container maxW=\"container.md\">\n        <Section textAlign=\"center\">\n          <Heading textTransform=\"uppercase\">{title}</Heading>\n          <Link\n            href={`/stories/authors/${author.slug}`}\n            textTransform=\"uppercase\"\n          >\n            {author.name}\n          </Link>\n          <Text>\n            {new Date(publishedAt).toLocaleDateString(\"en-US\", {\n              month: \"long\",\n              day: \"numeric\",\n              year: \"numeric\",\n            })}\n          </Text>\n        </Section>\n        {mainCaption && (\n          <Section>\n            <Text>{mainCaption}</Text>\n          </Section>\n        )}\n        <Section>\n          <PortableText blocks={body} />\n          <SolidHr />\n        </Section>\n      </Container>\n    </Layout>\n  )\n}\n\nconst postQuery = groq`\n  *[_type == \"post\" && slug.current == $post]{\n    _id,\n    title,\n    author->{\n      \"slug\": slug.current,\n      name,\n      \"image\": image.asset->{\n        metadata,\n        url\n      },\n      bio\n    },\n    tags,\n    title,\n    publishedAt,\n    \"mainImage\": mainImage.asset->{\n      metadata,\n      url\n    },\n    mainAlt,\n    mainCaption,\n    body\n  }[0]\n`\n\nexport const getStaticPaths = async () => {\n  const posts = await getClient().fetch(groq`\n    *[_type == \"post\"]{\n      \"slug\": slug.current,\n      category->{\n        \"slug\": slug.current\n      }\n    }\n  `)\n  const paths = posts.map((post) => ({\n    params: { category: post.category.slug, post: post.slug },\n  }))\n\n  return { paths, fallback: false }\n}\n\nexport const getStaticProps = async ({ params }) => {\n  const postData = await getClient().fetch(postQuery, {\n    post: params.post,\n  })\n\n  return { props: { postData } }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}