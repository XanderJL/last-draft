{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/alexander/github/XanderJL/last-draft/pages/index.js\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { groq } from \"next-sanity\";\nimport { getClient } from \"@lib/sanity/sanity.server\";\nimport Layout from \"@components/Layout\";\nimport Hero from \"@components/Hero\";\nimport { Box, Button, Container, Flex, Grid, GridItem, Heading, Icon, Text, VStack } from \"@chakra-ui/react\";\nimport { PortableText } from \"@lib/sanity\";\nimport Link from \"@components/Link\";\nimport ContactForm from \"@components/Forms/ContactForm\";\nimport toPlainText from \"util/toPlainText\";\n\nconst Home = ({\n  data\n}) => {\n  var _heroImage$metadata;\n\n  const {\n    heroImage,\n    heroCard,\n    cards,\n    cardsTitle,\n    contactHeading,\n    contactBody,\n    testimonials\n  } = data;\n  const {\n    0: index,\n    1: setIndex\n  } = useState(0);\n  const interval = useRef();\n  useEffect(() => {\n    interval.current = setInterval(() => setIndex(prev => {\n      const nextIndex = prev + 1;\n      return nextIndex > testimonials.length - 1 ? 0 : nextIndex;\n    }), 9000);\n    return () => clearInterval(interval.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      placeholder: heroImage === null || heroImage === void 0 ? void 0 : (_heroImage$metadata = heroImage.metadata) === null || _heroImage$metadata === void 0 ? void 0 : _heroImage$metadata.lqip,\n      image: heroImage === null || heroImage === void 0 ? void 0 : heroImage.url,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxW: \"container.xl\",\n        color: \"white\",\n        textShadow: \"2px 2px #000\",\n        children: /*#__PURE__*/_jsxDEV(PortableText, {\n          blocks: heroCard,\n          serializers: {\n            types: {\n              block: props => {\n                const {\n                  style = \"normal\"\n                } = props.node;\n\n                switch (style) {\n                  case \"h1\":\n                    return /*#__PURE__*/_jsxDEV(Heading, {\n                      size: \"4xl\",\n                      textTransform: \"uppercase\",\n                      pb: \"0.5rem\",\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 25\n                    }, this);\n\n                  case \"h2\":\n                    return /*#__PURE__*/_jsxDEV(Heading, {\n                      as: \"h2\",\n                      size: \"xl\",\n                      textTransform: \"uppercase\",\n                      pb: \"0.5rem\",\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 25\n                    }, this);\n\n                  default:\n                    return /*#__PURE__*/_jsxDEV(Text, {\n                      pb: \"1rem\",\n                      children: props.children\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 30\n                    }, this);\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      p: {\n        base: \"3rem 1.25rem\",\n        md: \"7rem 1.25rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          textAlign: \"center\",\n          textTransform: \"uppercase\",\n          children: cardsTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          templateColumns: {\n            base: \"minmax(0, 1fr)\",\n            md: \"repeat(3, 1fr)\"\n          },\n          gap: 12,\n          children: cards.map(card => {\n            const {\n              _key,\n              title,\n              body,\n              service,\n              icon\n            } = card;\n            return /*#__PURE__*/_jsxDEV(GridItem, {\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: `/services/#${service.slug}`,\n                children: /*#__PURE__*/_jsxDEV(Flex, {\n                  direction: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    boxSize: 125,\n                    viewBox: \"0 0 80 80\",\n                    m: 10,\n                    children: /*#__PURE__*/_jsxDEV(\"image\", {\n                      href: icon.url,\n                      height: \"80\",\n                      width: \"80\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Heading, {\n                    as: \"h2\",\n                    size: \"md\",\n                    pb: 2,\n                    textAlign: \"center\",\n                    textTransform: \"uppercase\",\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(PortableText, {\n                blocks: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this)]\n            }, _key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {\n      image: \"./index/newsletter-header.jpg\",\n      minH: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mx: \"auto\",\n        w: \"full\",\n        maxW: \"70ch\",\n        bg: \"blackAlpha.800\",\n        color: \"white\",\n        overflowX: \"hidden\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          w: `calc(100% * ${testimonials.length})`,\n          templateColumns: `repeat(${testimonials.length}, 1fr)`,\n          transform: `translateX(-${index / 4 * 100}%)`,\n          transition: \"transform 1000ms ease-in-out\",\n          children: testimonials.map(test => {\n            const {\n              _id,\n              brandName,\n              brandRep,\n              brandUrl,\n              repTitle,\n              testimonial\n            } = test;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              p: \"3rem 2rem\",\n              textAlign: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontStyle: \"italic\",\n                pb: \"1rem\",\n                children: toPlainText(testimonial)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: brandUrl,\n                fontWeight: 600,\n                isExternal: true,\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: brandRep\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: `${brandName}, ${repTitle}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)]\n            }, _id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), testimonials.map((_, i) => /*#__PURE__*/_jsxDEV(Button, {\n          boxSize: 4,\n          borderRadius: \"full\",\n          color: \"blackAlpha.800\",\n          onClick: () => {\n            setIndex(i);\n            clearInterval(interval.current);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/_jsxDEV(ContactForm, {\n        title: contactHeading,\n        body: contactBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\nconst homePageQuery = groq`\n  *[_type == \"indexPage\"]{\n    title,\n    metaDescription,\n    heroCard,\n    contactHeading,\n    contactBody,\n    \"heroImage\": heroImage.asset->{\n      url,\n      metadata,\n    },\n    cardsTitle,\n    cards[]{\n      _key,\n      title,\n      body,\n      \"icon\": icon.asset->{\n        url,\n        metadata,\n      },\n      service->{\n        \"slug\": slug.current,\n      },\n    },\n    testimonials[]->{\n      testimonial,\n      brandName,\n      brandRep,\n      repTitle,\n      brandUrl,\n      _id\n    },\n  }[0]\n`;\nexport const getStaticProps = async () => {\n  const data = await getClient().fetch(homePageQuery);\n  return {\n    props: {\n      data\n    }\n  };\n};\nexport default Home;","map":{"version":3,"sources":["/home/alexander/github/XanderJL/last-draft/pages/index.js"],"names":["useEffect","useState","useRef","groq","getClient","Layout","Hero","Box","Button","Container","Flex","Grid","GridItem","Heading","Icon","Text","VStack","PortableText","Link","ContactForm","toPlainText","Home","data","heroImage","heroCard","cards","cardsTitle","contactHeading","contactBody","testimonials","index","setIndex","interval","current","setInterval","prev","nextIndex","length","clearInterval","metadata","lqip","url","types","block","props","style","node","children","base","md","map","card","_key","title","body","service","icon","slug","test","_id","brandName","brandRep","brandUrl","repTitle","testimonial","_","i","homePageQuery","getStaticProps","fetch"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef } from \"react\"\nimport { groq } from \"next-sanity\"\nimport { getClient } from \"@lib/sanity/sanity.server\"\nimport Layout from \"@components/Layout\"\nimport Hero from \"@components/Hero\"\nimport {\n  Box,\n  Button,\n  Container,\n  Flex,\n  Grid,\n  GridItem,\n  Heading,\n  Icon,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\"\nimport { PortableText } from \"@lib/sanity\"\nimport Link from \"@components/Link\"\nimport ContactForm from \"@components/Forms/ContactForm\"\nimport toPlainText from \"util/toPlainText\"\n\nconst Home = ({ data }) => {\n  const {\n    heroImage,\n    heroCard,\n    cards,\n    cardsTitle,\n    contactHeading,\n    contactBody,\n    testimonials,\n  } = data\n  const [index, setIndex] = useState(0)\n  const interval = useRef()\n\n  useEffect(() => {\n    interval.current = setInterval(\n      () =>\n        setIndex((prev) => {\n          const nextIndex = prev + 1\n          return nextIndex > testimonials.length - 1 ? 0 : nextIndex\n        }),\n      9000\n    )\n\n    return () => clearInterval(interval.current)\n  }, [])\n\n  return (\n    <Layout>\n      <Hero placeholder={heroImage?.metadata?.lqip} image={heroImage?.url}>\n        <Container maxW=\"container.xl\" color=\"white\" textShadow=\"2px 2px #000\">\n          <PortableText\n            blocks={heroCard}\n            serializers={{\n              types: {\n                block: (props) => {\n                  const { style = \"normal\" } = props.node\n\n                  switch (style) {\n                    case \"h1\":\n                      return (\n                        <Heading\n                          size=\"4xl\"\n                          textTransform=\"uppercase\"\n                          pb=\"0.5rem\"\n                        >\n                          {props.children}\n                        </Heading>\n                      )\n                    case \"h2\":\n                      return (\n                        <Heading\n                          as=\"h2\"\n                          size=\"xl\"\n                          textTransform=\"uppercase\"\n                          pb=\"0.5rem\"\n                        >\n                          {props.children}\n                        </Heading>\n                      )\n                    default:\n                      return <Text pb=\"1rem\">{props.children}</Text>\n                  }\n                },\n              },\n            }}\n          />\n        </Container>\n      </Hero>\n      <Container\n        maxW=\"container.xl\"\n        p={{ base: \"3rem 1.25rem\", md: \"7rem 1.25rem\" }}\n      >\n        <VStack spacing={4}>\n          <Heading textAlign=\"center\" textTransform=\"uppercase\">\n            {cardsTitle}\n          </Heading>\n          <Grid\n            templateColumns={{ base: \"minmax(0, 1fr)\", md: \"repeat(3, 1fr)\" }}\n            gap={12}\n          >\n            {cards.map((card) => {\n              const { _key, title, body, service, icon } = card\n              return (\n                <GridItem key={_key} textAlign=\"center\">\n                  <Link href={`/services/#${service.slug}`}>\n                    <Flex\n                      direction=\"column\"\n                      justifyContent=\"center\"\n                      alignItems=\"center\"\n                    >\n                      <Icon boxSize={125} viewBox=\"0 0 80 80\" m={10}>\n                        <image href={icon.url} height=\"80\" width=\"80\" />\n                      </Icon>\n                      <Heading\n                        as=\"h2\"\n                        size=\"md\"\n                        pb={2}\n                        textAlign=\"center\"\n                        textTransform=\"uppercase\"\n                      >\n                        {title}\n                      </Heading>\n                    </Flex>\n                  </Link>\n                  <PortableText blocks={body} />\n                </GridItem>\n              )\n            })}\n          </Grid>\n        </VStack>\n      </Container>\n      <Hero image=\"./index/newsletter-header.jpg\" minH=\"100vh\">\n        <Box\n          mx=\"auto\"\n          w=\"full\"\n          maxW=\"70ch\"\n          bg=\"blackAlpha.800\"\n          color=\"white\"\n          overflowX=\"hidden\"\n        >\n          <Grid\n            w={`calc(100% * ${testimonials.length})`}\n            templateColumns={`repeat(${testimonials.length}, 1fr)`}\n            transform={`translateX(-${(index / 4) * 100}%)`}\n            transition=\"transform 1000ms ease-in-out\"\n          >\n            {testimonials.map((test) => {\n              const {\n                _id,\n                brandName,\n                brandRep,\n                brandUrl,\n                repTitle,\n                testimonial,\n              } = test\n              return (\n                <Box key={_id} p=\"3rem 2rem\" textAlign=\"center\">\n                  <Text fontStyle=\"italic\" pb=\"1rem\">\n                    {toPlainText(testimonial)}\n                  </Text>\n                  <Link href={brandUrl} fontWeight={600} isExternal>\n                    <Text>{brandRep}</Text>\n                    <Text>{`${brandName}, ${repTitle}`}</Text>\n                  </Link>\n                </Box>\n              )\n            })}\n          </Grid>\n          {testimonials.map((_, i) => (\n            <Button\n              boxSize={4}\n              borderRadius=\"full\"\n              color=\"blackAlpha.800\"\n              onClick={() => {\n                setIndex(i)\n                clearInterval(interval.current)\n              }}\n            />\n          ))}\n        </Box>\n      </Hero>\n      <Container maxW=\"container.xl\">\n        <ContactForm title={contactHeading} body={contactBody} />\n      </Container>\n    </Layout>\n  )\n}\n\nconst homePageQuery = groq`\n  *[_type == \"indexPage\"]{\n    title,\n    metaDescription,\n    heroCard,\n    contactHeading,\n    contactBody,\n    \"heroImage\": heroImage.asset->{\n      url,\n      metadata,\n    },\n    cardsTitle,\n    cards[]{\n      _key,\n      title,\n      body,\n      \"icon\": icon.asset->{\n        url,\n        metadata,\n      },\n      service->{\n        \"slug\": slug.current,\n      },\n    },\n    testimonials[]->{\n      testimonial,\n      brandName,\n      brandRep,\n      repTitle,\n      brandUrl,\n      _id\n    },\n  }[0]\n`\n\nexport const getStaticProps = async () => {\n  const data = await getClient().fetch(homePageQuery)\n\n  return { props: { data } }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}